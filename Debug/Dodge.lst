SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE    1

************ OBJECT LISTING ************

FILE NAME: D:\_Extra Space\CalculatorProjects\Dodge\Dodge.c

SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Dodge.c     1    // the skeleton of this code was stolen from https://github.com/itisrazza/casio-pong
         Dodge.c     2    
         Dodge.c     3    
         Dodge.c     4    // Import some libraries
         Dodge.c     5    #include "stdio.h"    // Standard IO
         Dodge.c     6    #include <stdlib.h>
         Dodge.c     7    #include "fxlib.h"    // CASIO fx-9860G SDK
         Dodge.c     8    #include "dispbios.h" // Display BIOS
         Dodge.c     9    #include "timer.h"    // Timer
         Dodge.c    10    
         Dodge.c    11    #define PI 3.1415926f; // i doubt i'll need more digits than this
         Dodge.c    12    
         Dodge.c    13    #pragma region KeyFixStuffMikeySentMe
         Dodge.c    14    
         Dodge.c    15    #define __KEYBIOS_H__
         Dodge.c    16    #define KEY_CHAR_0 71
         Dodge.c    17    #define KEY_CHAR_1 72
         Dodge.c    18    #define KEY_CHAR_2 62
         Dodge.c    19    #define KEY_CHAR_3 52
         Dodge.c    20    #define KEY_CHAR_4 73
         Dodge.c    21    #define KEY_CHAR_5 63
         Dodge.c    22    #define KEY_CHAR_6 53
         Dodge.c    23    #define KEY_CHAR_7 74
         Dodge.c    24    #define KEY_CHAR_8 64
         Dodge.c    25    #define KEY_CHAR_9 54
         Dodge.c    26    #define KEY_CHAR_DP 61
         Dodge.c    27    #define KEY_CHAR_EXP 51
         Dodge.c    28    #define KEY_CHAR_PMINUS 41
         Dodge.c    29    #define KEY_CHAR_PLUS 42
         Dodge.c    30    #define KEY_CHAR_MINUS 32
         Dodge.c    31    #define KEY_CHAR_MULT 43
         Dodge.c    32    #define KEY_CHAR_DIV 33
         Dodge.c    33    #define KEY_CHAR_FRAC 75
         Dodge.c    34    #define KEY_CHAR_LPAR 55
         Dodge.c    35    #define KEY_CHAR_RPAR 45
         Dodge.c    36    #define KEY_CHAR_COMMA 35
         Dodge.c    37    #define KEY_CHAR_STORE 25
         Dodge.c    38    #define KEY_CHAR_LOG 66
         Dodge.c    39    #define KEY_CHAR_LN 56
         Dodge.c    40    #define KEY_CHAR_SIN 46
         Dodge.c    41    #define KEY_CHAR_COS 36
         Dodge.c    42    #define KEY_CHAR_TAN 26
         Dodge.c    43    #define KEY_CHAR_SQUARE 67
         Dodge.c    44    #define KEY_CHAR_POW 57
         Dodge.c    45    #define KEY_CTRL_EXE 31
         Dodge.c    46    #define KEY_CTRL_DEL 44
         Dodge.c    47    #define KEY_CTRL_AC 32
         Dodge.c    48    #define KEY_CTRL_FD 65
         Dodge.c    49    #define KEY_CTRL_EXIT 47
         Dodge.c    50    #define KEY_CTRL_SHIFT 78
         Dodge.c    51    #define KEY_CTRL_ALPHA 77
         Dodge.c    52    #define KEY_CTRL_OPTN 68
         Dodge.c    53    #define KEY_CTRL_VARS 58
         Dodge.c    54    #define KEY_CTRL_UP 28




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE    2


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Dodge.c    55    #define KEY_CTRL_DOWN 37
         Dodge.c    56    #define KEY_CTRL_LEFT 38
         Dodge.c    57    #define KEY_CTRL_RIGHT 27
         Dodge.c    58    #define KEY_CTRL_F1 79
         Dodge.c    59    #define KEY_CTRL_F2 69
         Dodge.c    60    #define KEY_CTRL_F3 59
         Dodge.c    61    #define KEY_CTRL_F4 49
         Dodge.c    62    #define KEY_CTRL_F5 39
         Dodge.c    63    #define KEY_CTRL_F6 29
         Dodge.c    64    #define KEY_CTRL_MENU 48
         Dodge.c    65    #ifndef OS2Change
         Dodge.c    66    #define OS2Change
         Dodge.c    67    #ifndef OS2Change_GetOS2
         Dodge.c    68    #define OS2Change_GetOS2
         Dodge.c    69    typedef int(*sc_i2cp2sip)(char*, char*, short int*, short int*);
         Dodge.c    70    const unsigned int sc0015[] = { 0xD201D002, 0x422B0009, 0x80010070, 0x0015 };
         Dodge.c    71    #define GlibGetOSVersionInfo (*(sc_i2cp2sip)sc0015)
         Dodge.c    72    int OSVersionAsInt(void)
P   00000000              _OSVersionAsInt:                 ; function: OSVersionAsInt
                                                           ; frame size=20
    00000000 4F22                   STS.L       PR,@-R15
    00000002 7FF0                   ADD         #-16,R15
         Dodge.c    73    {
         Dodge.c    74    unsigned char mainversion;
         Dodge.c    75    unsigned char minorversion;
         Dodge.c    76    unsigned short release;
         Dodge.c    77    unsigned short build;
         Dodge.c    78    GlibGetOSVersionInfo( &mainversion, &minorversion, &release, &build );
    00000004 D346                   MOV.L       L777+6,R3  ; _sc0015
    00000006 67F3                   MOV         R15,R7
    00000008 770C                   ADD         #12,R7
    0000000A 66F3                   MOV         R15,R6
    0000000C 7608                   ADD         #8,R6
    0000000E 65F3                   MOV         R15,R5
    00000010 7504                   ADD         #4,R5
    00000012 430B                   JSR         @R3
    00000014 64F3                   MOV         R15,R4
         Dodge.c    79    return ( ( mainversion << 24 ) & 0xFF000000 ) | ( ( minorversion << 16 ) & 0x00FF0000 ) | ( release & 0x00
                         +00FFFF );
    00000016 60F0                   MOV.B       @R15,R0
    00000018 D342                   MOV.L       L777+10,R3 ; H'FF000000
    0000001A 600C                   EXTU.B      R0,R0
    0000001C D242                   MOV.L       L777+14,R2 ; H'00FF0000
    0000001E 4028                   SHLL16      R0
    00000020 4018                   SHLL8       R0
    00000022 2039                   AND         R3,R0
    00000024 6103                   MOV         R0,R1
    00000026 84F4                   MOV.B       @(4,R15),R0
    00000028 600C                   EXTU.B      R0,R0
    0000002A 4028                   SHLL16      R0
    0000002C 2029                   AND         R2,R0
    0000002E 201B                   OR          R1,R0
    00000030 6103                   MOV         R0,R1
    00000032 85F4                   MOV.W       @(8,R15),R0
    00000034 600D                   EXTU.W      R0,R0
         Dodge.c    80    }
    00000036 7F10                   ADD         #16,R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE    3


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000038 4F26                   LDS.L       @R15+,PR
    0000003A 000B                   RTS
    0000003C 201B                   OR          R1,R0
         Dodge.c    81    #define isOS2 (OSVersionAsInt() >= 0x02020000)
         Dodge.c    82    #define OS2(x,y) ((OSVersionAsInt() >= 0x02020000)?y:x)
         Dodge.c    83    #endif
         Dodge.c    84    #ifndef OS2Change_Keyboard
         Dodge.c    85    #define OS2Change_Keyboard
         Dodge.c    86    void delay(void)
    0000003E              _delay:                          ; function: delay
                                                           ; frame size=0
         Dodge.c    87    {
         Dodge.c    88    char i;
         Dodge.c    89    for (i=0; i<5; i++){};
    0000003E E505                   MOV         #5,R5
    00000040 E400                   MOV         #0,R4
    00000042              L620:                             
    00000042 7401                   ADD         #1,R4
    00000044 634E                   EXTS.B      R4,R3
    00000046 3353                   CMP/GE      R5,R3
    00000048 8BFB                   BF          L620
         Dodge.c    90    }
    0000004A 000B                   RTS
    0000004C 0009                   NOP
         Dodge.c    91    unsigned char CheckKeyRow(unsigned char code)
    0000004E              _CheckKeyRow:                    ; function: CheckKeyRow
                                                           ; frame size=32
         Dodge.c    92    {
         Dodge.c    93    unsigned char result=0;
         Dodge.c    94    short*PORTB_CTRL=(void*)0xA4000102;
         Dodge.c    95    short*PORTM_CTRL=(void*)0xA4000118;
         Dodge.c    96    char*PORTB=(void*)0xA4000122;
         Dodge.c    97    char*PORTM=(void*)0xA4000138;
         Dodge.c    98    char*PORTA=(void*)0xA4000120;
         Dodge.c    99    short smask;
         Dodge.c   100    char cmask;
         Dodge.c   101    unsigned char column, row;
         Dodge.c   102    column = code>>4;
    0000004E 634C                   EXTU.B      R4,R3
    00000050 2FE6                   MOV.L       R14,@-R15
         Dodge.c   103    row = code &0x0F;
    00000052 E50F                   MOV         #15,R5
    00000054 2FD6                   MOV.L       R13,@-R15
    00000056 4309                   SHLR2       R3
    00000058 2FC6                   MOV.L       R12,@-R15
    0000005A 2549                   AND         R4,R5
    0000005C 2FB6                   MOV.L       R11,@-R15
    0000005E 4309                   SHLR2       R3
    00000060 2FA6                   MOV.L       R10,@-R15
         Dodge.c   104    smask = 0x0003 << (( row %8)*2);
    00000062 665C                   EXTU.B      R5,R6
    00000064 2F96                   MOV.L       R9,@-R15
    00000066 6063                   MOV         R6,R0
    00000068 4F22                   STS.L       PR,@-R15
    0000006A 4011                   CMP/PZ      R0
    0000006C 7FFC                   ADD         #-4,R15
    0000006E 2F30                   MOV.B       R3,@R15




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE    4


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000070 8B01                   BF          L621
    00000072 A005                   BRA         L622
    00000074 C907                   AND         #7,R0
    00000076              L621:                             
    00000076 6007                   NOT         R0,R0
    00000078 7001                   ADD         #1,R0
    0000007A C907                   AND         #7,R0
    0000007C 6007                   NOT         R0,R0
    0000007E 7001                   ADD         #1,R0
    00000080              L622:                             
         Dodge.c   105    cmask = ~( 1 << ( row %8) );
         Dodge.c   106    if(row <8)
    00000080 994B                   MOV.W       L777,R9    ; H'AAAA
    00000082 E208                   MOV         #8,R2
    00000084 DB29                   MOV.L       L777+18,R11; H'A4000102
    00000086 6403                   MOV         R0,R4
    00000088 9D48                   MOV.W       L777+2,R13 ; H'FF00
    0000008A E503                   MOV         #3,R5
    0000008C DE28                   MOV.L       L777+22,R14; H'A4000118
    0000008E EA01                   MOV         #1,R10
    00000090 4000                   SHLL        R0
    00000092 450C                   SHAD        R0,R5
    00000094 4A4C                   SHAD        R4,R10
    00000096 6AA7                   NOT         R10,R10
    00000098 6CB3                   MOV         R11,R12
    0000009A 3623                   CMP/GE      R2,R6
    0000009C 8D0D                   BT/S        L623
    0000009E 7C36                   ADD         #54,R12
         Dodge.c   107    {
         Dodge.c   108      *PORTB_CTRL = 0xAAAA ^ smask;
    000000A0 259A                   XOR         R9,R5
    000000A2 2B51                   MOV.W       R5,@R11
         Dodge.c   109      *PORTM_CTRL = (*PORTM_CTRL & 0xFF00 ) | 0x00AA;
    000000A4 60E1                   MOV.W       @R14,R0
    000000A6 20D9                   AND         R13,R0
    000000A8 CBAA                   OR          #170,R0
         Dodge.c   110      delay();
    000000AA BFC8                   BSR         _delay
    000000AC 2E01                   MOV.W       R0,@R14
         Dodge.c   111      *PORTB = cmask;
    000000AE D221                   MOV.L       L777+26,R2 ; H'A4000122
    000000B0 22A0                   MOV.B       R10,@R2
         Dodge.c   112      *PORTM = (*PORTM & 0xF0 ) | 0x0F;
    000000B2 60C0                   MOV.B       @R12,R0
    000000B4 C9F0                   AND         #240,R0
    000000B6 A00D                   BRA         L769
    000000B8 CB0F                   OR          #15,R0
    000000BA              L623:                             
         Dodge.c   113    }
         Dodge.c   114    else
         Dodge.c   115    {
         Dodge.c   116      *PORTB_CTRL = 0xAAAA;
    000000BA 2B91                   MOV.W       R9,@R11
         Dodge.c   117      *PORTM_CTRL = ((*PORTM_CTRL & 0xFF00 ) | 0x00AA)  ^ smask;
    000000BC 60E1                   MOV.W       @R14,R0
    000000BE 20D9                   AND         R13,R0
    000000C0 CBAA                   OR          #170,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE    5


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000000C2 205A                   XOR         R5,R0
         Dodge.c   118      delay();
    000000C4 BFBB                   BSR         _delay
    000000C6 2E01                   MOV.W       R0,@R14
         Dodge.c   119      *PORTB = 0xFF;
    000000C8 D31A                   MOV.L       L777+26,R3 ; H'A4000122
    000000CA E2FF                   MOV         #-1,R2
    000000CC 2320                   MOV.B       R2,@R3
         Dodge.c   120      *PORTM = (*PORTM & 0xF0 ) | cmask;
    000000CE 60C0                   MOV.B       @R12,R0
    000000D0 C9F0                   AND         #240,R0
    000000D2 20AB                   OR          R10,R0
    000000D4              L769:                             
         Dodge.c   121    }
         Dodge.c   122    
         Dodge.c   123    delay();
    000000D4 BFB3                   BSR         _delay
    000000D6 2C00                   MOV.B       R0,@R12
         Dodge.c   124    result = (~(*PORTA))>>column & 1;
    000000D8 D317                   MOV.L       L777+30,R3 ; H'A4000120
    000000DA 6030                   MOV.B       @R3,R0
    000000DC 62F0                   MOV.B       @R15,R2
    000000DE 6007                   NOT         R0,R0
    000000E0 622C                   EXTU.B      R2,R2
    000000E2 622B                   NEG         R2,R2
    000000E4 402C                   SHAD        R2,R0
    000000E6 C901                   AND         #1,R0
         Dodge.c   125    delay();
    000000E8 BFA9                   BSR         _delay
    000000EA 2F00                   MOV.B       R0,@R15
         Dodge.c   126    *PORTB_CTRL = 0xAAAA;
    000000EC 2B91                   MOV.W       R9,@R11
         Dodge.c   127    *PORTM_CTRL = (*PORTM_CTRL & 0xFF00 ) | 0x00AA;
    000000EE 60E1                   MOV.W       @R14,R0
    000000F0 20D9                   AND         R13,R0
    000000F2 CBAA                   OR          #170,R0
         Dodge.c   128    delay();
    000000F4 BFA3                   BSR         _delay
    000000F6 2E01                   MOV.W       R0,@R14
         Dodge.c   129    *PORTB_CTRL = 0x5555;
    000000F8 9211                   MOV.W       L777+4,R2  ; H'5555
    000000FA 2B21                   MOV.W       R2,@R11
         Dodge.c   130    *PORTM_CTRL = (*PORTM_CTRL & 0xFF00 ) | 0x0055;
    000000FC 60E1                   MOV.W       @R14,R0
    000000FE 20D9                   AND         R13,R0
    00000100 CB55                   OR          #85,R0
         Dodge.c   131    delay();
    00000102 BF9C                   BSR         _delay
    00000104 2E01                   MOV.W       R0,@R14
         Dodge.c   132    
         Dodge.c   133    return result;
    00000106 60F0                   MOV.B       @R15,R0
         Dodge.c   134    }
    00000108 7F04                   ADD         #4,R15
    0000010A 4F26                   LDS.L       @R15+,PR
    0000010C 69F6                   MOV.L       @R15+,R9
    0000010E 6AF6                   MOV.L       @R15+,R10




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE    6


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000110 6BF6                   MOV.L       @R15+,R11
    00000112 6CF6                   MOV.L       @R15+,R12
    00000114 6DF6                   MOV.L       @R15+,R13
    00000116 000B                   RTS
    00000118 6EF6                   MOV.L       @R15+,R14
    0000011A              L777:                             
    0000011A AAAA                   .DATA.W     H'AAAA
    0000011C FF00                   .DATA.W     H'FF00
    0000011E 5555                   .DATA.W     H'5555
    00000120 <00000000>             .DATA.L     _sc0015
    00000124 FF000000               .DATA.L     H'FF000000
    00000128 00FF0000               .DATA.L     H'00FF0000
    0000012C A4000102               .DATA.L     H'A4000102
    00000130 A4000118               .DATA.L     H'A4000118
    00000134 A4000122               .DATA.L     H'A4000122
    00000138 A4000120               .DATA.L     H'A4000120
         Dodge.c   135    
         Dodge.c   136    unsigned char KeyDown(unsigned char keycode)
    0000013C              _KeyDown:                        ; function: KeyDown
                                                           ; frame size=36
                                                           ; used runtime library name:
                                                           ; __divls, __modls
    0000013C 2FE6                   MOV.L       R14,@-R15
    0000013E EE0A                   MOV         #10,R14
    00000140 2FD6                   MOV.L       R13,@-R15
    00000142 4F22                   STS.L       PR,@-R15
         Dodge.c   137    {
         Dodge.c   138    unsigned short key[8];
         Dodge.c   139    const unsigned short* keyboardregister = (unsigned short*)0xA44B0000;
    00000144 D353                   MOV.L       L778,R3    ; H'A44B0000
    00000146 7FE8                   ADD         #-24,R15
    00000148 2F40                   MOV.B       R4,@R15
    0000014A 1F31                   MOV.L       R3,@(4,R15)
    0000014C 6DF0                   MOV.B       @R15,R13
    0000014E BF57                   BSR         _OSVersionAsInt
    00000150 6DDC                   EXTU.B      R13,R13
    00000152 D251                   MOV.L       L778+4,R2  ; H'02020000
    00000154 3023                   CMP/GE      R2,R0
    00000156 8B26                   BF          L626
         Dodge.c   140    if(isOS2)
         Dodge.c   141    {
         Dodge.c   142      unsigned char row = keycode%10;
    00000158 D350                   MOV.L       L778+8,R3  ; __modls
    0000015A 61D3                   MOV         R13,R1
    0000015C 430B                   JSR         @R3
    0000015E 60E3                   MOV         R14,R0
    00000160 2F00                   MOV.B       R0,@R15
         Dodge.c   143      memcpy(key, keyboardregister, sizeof(unsigned short) << 3);
    00000162 E610                   MOV         #16,R6
    00000164 D34E                   MOV.L       L778+12,R3 ; _memcpy
    00000166 64F3                   MOV         R15,R4
    00000168 55F1                   MOV.L       @(4,R15),R5
    0000016A 430B                   JSR         @R3
    0000016C 7408                   ADD         #8,R4
         Dodge.c   144     
         Dodge.c   145      return (0 != (key[row >> 1] & 1 << keycode / 10 - 1 + ((row & 1) << 3)));
    0000016E E501                   MOV         #1,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE    7


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000170 64F0                   MOV.B       @R15,R4
    00000172 61D3                   MOV         R13,R1
    00000174 D24B                   MOV.L       L778+16,R2 ; __divls
    00000176 644C                   EXTU.B      R4,R4
    00000178 6343                   MOV         R4,R3
    0000017A 2359                   AND         R5,R3
    0000017C 4308                   SHLL2       R3
    0000017E 4300                   SHLL        R3
    00000180 420B                   JSR         @R2
    00000182 60E3                   MOV         R14,R0
    00000184 330C                   ADD         R0,R3
    00000186 73FF                   ADD         #-1,R3
    00000188 6053                   MOV         R5,R0
    0000018A 403C                   SHAD        R3,R0
    0000018C 6343                   MOV         R4,R3
    0000018E 4321                   SHAR        R3
    00000190 4300                   SHLL        R3
    00000192 61F3                   MOV         R15,R1
    00000194 7108                   ADD         #8,R1
    00000196 331C                   ADD         R1,R3
    00000198 6231                   MOV.W       @R3,R2
    0000019A 622D                   EXTU.W      R2,R2
    0000019C 2029                   AND         R2,R0
    0000019E 2008                   TST         R0,R0
    000001A0 0029                   MOVT        R0
    000001A2 A00E                   BRA         L628
    000001A4 CA01                   XOR         #1,R0
    000001A6              L626:                             
         Dodge.c   146    }
         Dodge.c   147    else
         Dodge.c   148    {
         Dodge.c   149      return CheckKeyRow((keycode % 10) + ((keycode / 10 - 1) << 4));
    000001A6 61D3                   MOV         R13,R1
    000001A8 D33E                   MOV.L       L778+16,R3 ; __divls
    000001AA 430B                   JSR         @R3
    000001AC 60E3                   MOV         R14,R0
    000001AE 6403                   MOV         R0,R4
    000001B0 D33A                   MOV.L       L778+8,R3  ; __modls
    000001B2 61D3                   MOV         R13,R1
    000001B4 74FF                   ADD         #-1,R4
    000001B6 4408                   SHLL2       R4
    000001B8 4408                   SHLL2       R4
    000001BA 430B                   JSR         @R3
    000001BC 60E3                   MOV         R14,R0
    000001BE BF46                   BSR         _CheckKeyRow
    000001C0 340C                   ADD         R0,R4
         Dodge.c   150    }
         Dodge.c   151    }
    000001C2              L628:                             
    000001C2 7F18                   ADD         #24,R15
    000001C4 4F26                   LDS.L       @R15+,PR
    000001C6 6DF6                   MOV.L       @R15+,R13
    000001C8 000B                   RTS
    000001CA 6EF6                   MOV.L       @R15+,R14
         Dodge.c   152    unsigned char GetKeyMod(unsigned int *key)
    000001CC              _GetKeyMod:                      ; function: GetKeyMod
                                                           ; frame size=20




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE    8


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000001CC 2FE6                   MOV.L       R14,@-R15
    000001CE 2FD6                   MOV.L       R13,@-R15
    000001D0 2FC6                   MOV.L       R12,@-R15
    000001D2 4F22                   STS.L       PR,@-R15
         Dodge.c   153    {
         Dodge.c   154    unsigned char x, ret;
         Dodge.c   155    
         Dodge.c   156    ret = GetKey(key);
    000001D4 D334                   MOV.L       L778+20,R3 ; _GetKey
    000001D6 7FFC                   ADD         #-4,R15
    000001D8 430B                   JSR         @R3
    000001DA 6C43                   MOV         R4,R12
    000001DC 2F00                   MOV.B       R0,@R15
         Dodge.c   157    
         Dodge.c   158    for(x = 0; x < 80; x++)
    000001DE EE00                   MOV         #0,R14
    000001E0 ED50                   MOV         #80,R13
    000001E2              L631:                             
         Dodge.c   159    {
         Dodge.c   160      if(KeyDown(x))
    000001E2 BFAB                   BSR         _KeyDown
    000001E4 64E3                   MOV         R14,R4
    000001E6 600C                   EXTU.B      R0,R0
    000001E8 2008                   TST         R0,R0
    000001EA 8902                   BT          L632
         Dodge.c   161      {
         Dodge.c   162       *key = x;
    000001EC 6EEC                   EXTU.B      R14,R14
         Dodge.c   163       break;
    000001EE A004                   BRA         L630
    000001F0 2CE2                   MOV.L       R14,@R12
    000001F2              L632:                             
    000001F2 7E01                   ADD         #1,R14
    000001F4 62EC                   EXTU.B      R14,R2
    000001F6 32D3                   CMP/GE      R13,R2
    000001F8 8BF3                   BF          L631
    000001FA              L630:                             
         Dodge.c   164      }
         Dodge.c   165    }
         Dodge.c   166    return ret;
    000001FA 60F0                   MOV.B       @R15,R0
         Dodge.c   167    }
    000001FC 7F04                   ADD         #4,R15
    000001FE 4F26                   LDS.L       @R15+,PR
    00000200 6CF6                   MOV.L       @R15+,R12
    00000202 6DF6                   MOV.L       @R15+,R13
    00000204 000B                   RTS
    00000206 6EF6                   MOV.L       @R15+,R14
         Dodge.c   168    #define IsKeyDown(x) KeyDown(x)
         Dodge.c   169    #define IsKeyUp(x) !KeyDown(x)
         Dodge.c   170    #define GetKey(x) GetKeyMod(x)
         Dodge.c   171    #endif
         Dodge.c   172    #endif
         Dodge.c   173    
         Dodge.c   174    #pragma endregion
         Dodge.c   175    
         Dodge.c   176    #pragma region Constants




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE    9


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Dodge.c   177    
         Dodge.c   178    // true/false since it's 2018
         Dodge.c   179    const char true  = 1;           // True and false aren't assigned, weird.
         Dodge.c   180    const char false = 0;
         Dodge.c   181    
         Dodge.c   182    // Display properties
         Dodge.c   183    const char DISPLAY_WIDTH    = 128;
         Dodge.c   184    const char DISPLAY_HEIGHT   =  64;
         Dodge.c   185    const char DISPLAY_CENTER_X =  64; // 128 / 2
         Dodge.c   186    const char DISPLAY_CENTER_Y =  32; //  64 / 2
         Dodge.c   187    
         Dodge.c   188    #pragma endregion
         Dodge.c   189    
         Dodge.c   190    struct Projectile {
         Dodge.c   191        char enabled;
         Dodge.c   192        float x;
         Dodge.c   193        float y;
         Dodge.c   194        float xVelocity;
         Dodge.c   195        float yVelocity;
         Dodge.c   196        float xAcceleration;
         Dodge.c   197        float yAcceleration;
         Dodge.c   198        float trackingForce;
         Dodge.c   199    };
         Dodge.c   200    struct Projectile projectiles[128];
         Dodge.c   201    
         Dodge.c   202    #pragma region Variables
         Dodge.c   203    
         Dodge.c   204    int playerHealth = 64;
         Dodge.c   205    int playerX = 64;
         Dodge.c   206    int playerY = 32;
         Dodge.c   207    
         Dodge.c   208    int projectileIndex;
         Dodge.c   209    int maxProjectiles;
         Dodge.c   210    int currentAttack = 0;
         Dodge.c   211    const int attacksTotal = 7;
         Dodge.c   212    
         Dodge.c   213    char paused = 1;
         Dodge.c   214    
         Dodge.c   215    char quit = 0;
         Dodge.c   216    
         Dodge.c   217    int timer = 0;
         Dodge.c   218    
         Dodge.c   219    char flicker = 1;
         Dodge.c   220    char damaged = 0;
         Dodge.c   221    int flickerOffset = 0;
         Dodge.c   222    
         Dodge.c   223    #pragma endregion
         Dodge.c   224    
         Dodge.c   225    int Sign(int x) {
    00000208              _Sign:                           ; function: Sign
                                                           ; frame size=0
         Dodge.c   226        if (x > 0) return 1;
    00000208 4415                   CMP/PL      R4
    0000020A 8B01                   BF          L635
    0000020C 000B                   RTS
    0000020E E001                   MOV         #1,R0
    00000210              L635:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   10


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Dodge.c   227        if (x < 0) return -1;
    00000210 4411                   CMP/PZ      R4
    00000212 8901                   BT          L637
    00000214 000B                   RTS
    00000216 E0FF                   MOV         #-1,R0
    00000218              L637:                             
         Dodge.c   228        return 0;
    00000218 E000                   MOV         #0,R0
         Dodge.c   229    }
    0000021A              L636:                             
    0000021A 000B                   RTS
    0000021C 0009                   NOP
         Dodge.c   230    float Signf(float x) {
    0000021E              _Signf:                          ; function: Signf
                                                           ; frame size=4
                                                           ; used runtime library name:
                                                           ; __gts, __lts
         Dodge.c   231        if (x > 0) return 1;
    0000021E 6143                   MOV         R4,R1
    00000220 D322                   MOV.L       L778+24,R3 ; __gts
    00000222 4F22                   STS.L       PR,@-R15
    00000224 430B                   JSR         @R3
    00000226 E000                   MOV         #0,R0
    00000228 8800                   CMP/EQ      #0,R0
    0000022A 8903                   BT          L638
    0000022C D020                   MOV.L       L778+28,R0 ; H'3F800000
    0000022E 4F26                   LDS.L       @R15+,PR
    00000230 000B                   RTS
    00000232 0009                   NOP
    00000234              L638:                             
         Dodge.c   232        if (x < 0) return -1;
    00000234 D21F                   MOV.L       L778+32,R2 ; __lts
    00000236 6143                   MOV         R4,R1
    00000238 420B                   JSR         @R2
    0000023A E000                   MOV         #0,R0
    0000023C 8800                   CMP/EQ      #0,R0
    0000023E 8903                   BT          L640
    00000240 D01D                   MOV.L       L778+36,R0 ; H'BF800000
    00000242 4F26                   LDS.L       @R15+,PR
    00000244 000B                   RTS
    00000246 0009                   NOP
    00000248              L640:                             
         Dodge.c   233        return 0;
    00000248 E000                   MOV         #0,R0
         Dodge.c   234    }
    0000024A              L639:                             
    0000024A 4F26                   LDS.L       @R15+,PR
    0000024C 000B                   RTS
    0000024E 0009                   NOP
         Dodge.c   235    int Max(int a, int b) {
    00000250              _Max:                            ; function: Max
                                                           ; frame size=0
         Dodge.c   236        if(a > b)
    00000250 3457                   CMP/GT      R5,R4
    00000252 8B01                   BF          L641
         Dodge.c   237            return a;
    00000254 000B                   RTS




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   11


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000256 6043                   MOV         R4,R0
    00000258              L641:                             
         Dodge.c   238        else
         Dodge.c   239            return b;
    00000258 6053                   MOV         R5,R0
         Dodge.c   240    }
    0000025A              L642:                             
    0000025A 000B                   RTS
    0000025C 0009                   NOP
         Dodge.c   241    int Min(int a, int b) {
    0000025E              _Min:                            ; function: Min
                                                           ; frame size=0
         Dodge.c   242        if(a < b)
    0000025E 3453                   CMP/GE      R5,R4
    00000260 8901                   BT          L644
         Dodge.c   243            return a;
    00000262 000B                   RTS
    00000264 6043                   MOV         R4,R0
    00000266              L644:                             
         Dodge.c   244        else
         Dodge.c   245            return b;
    00000266 6053                   MOV         R5,R0
         Dodge.c   246    }
    00000268              L645:                             
    00000268 000B                   RTS
    0000026A 0009                   NOP
         Dodge.c   247    
         Dodge.c   248    void AppQuit()
    0000026C              _AppQuit:                        ; function: AppQuit
                                                           ; frame size=8
    0000026C 2FE6                   MOV.L       R14,@-R15
    0000026E 4F22                   STS.L       PR,@-R15
         Dodge.c   249    {
         Dodge.c   250        KillTimer(ID_USER_TIMER1);
    00000270 DE12                   MOV.L       L778+40,R14; _KillTimer
    00000272 4E0B                   JSR         @R14
    00000274 E401                   MOV         #1,R4
         Dodge.c   251        KillTimer(ID_USER_TIMER2);
    00000276 4E0B                   JSR         @R14
    00000278 E402                   MOV         #2,R4
         Dodge.c   252        KillTimer(ID_USER_TIMER3);
    0000027A 4E0B                   JSR         @R14
    0000027C E403                   MOV         #3,R4
         Dodge.c   253        KillTimer(ID_USER_TIMER4);
    0000027E 4E0B                   JSR         @R14
    00000280 E404                   MOV         #4,R4
         Dodge.c   254        KillTimer(ID_USER_TIMER5);
    00000282 4E0B                   JSR         @R14
    00000284 E405                   MOV         #5,R4
         Dodge.c   255    
         Dodge.c   256        quit = true;
    00000286 D20E                   MOV.L       L778+44,R2 ; _true
    00000288 D10E                   MOV.L       L778+48,R1 ; _quit
    0000028A 6320                   MOV.B       @R2,R3
    0000028C 2130                   MOV.B       R3,@R1
         Dodge.c   257    
         Dodge.c   258        return;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   12


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Dodge.c   259    }
    0000028E 4F26                   LDS.L       @R15+,PR
    00000290 000B                   RTS
    00000292 6EF6                   MOV.L       @R15+,R14
    00000294              L778:                             
    00000294 A44B0000               .DATA.L     H'A44B0000
    00000298 02020000               .DATA.L     H'02020000
    0000029C <00000000>             .DATA.L     __modls
    000002A0 <00000000>             .DATA.L     _memcpy
    000002A4 <00000000>             .DATA.L     __divls
    000002A8 <00000000>             .DATA.L     _GetKey
    000002AC <00000000>             .DATA.L     __gts
    000002B0 3F800000               .DATA.L     H'3F800000
    000002B4 <00000000>             .DATA.L     __lts
    000002B8 BF800000               .DATA.L     H'BF800000
    000002BC <00000000>             .DATA.L     _KillTimer
    000002C0 <00000000>             .DATA.L     _true
    000002C4 <00000000>             .DATA.L     _quit
         Dodge.c   260    
         Dodge.c   261    #pragma region Drawing functions
         Dodge.c   262    
         Dodge.c   263    // draw an image (from array) that covers the whole screen
         Dodge.c   264    // if drawWhite is false, white (0) pixels will be treated as transparent (i.e. not override whatever's be
                         +hind them)
         Dodge.c   265    void DrawImage(char sprite[128][64], char drawWhite) {
    000002C8              _DrawImage:                      ; function: DrawImage
                                                           ; frame size=40
    000002C8 2FE6                   MOV.L       R14,@-R15
    000002CA 2FD6                   MOV.L       R13,@-R15
    000002CC 2FC6                   MOV.L       R12,@-R15
    000002CE 2FB6                   MOV.L       R11,@-R15
    000002D0 2FA6                   MOV.L       R10,@-R15
    000002D2 2F96                   MOV.L       R9,@-R15
    000002D4 2F86                   MOV.L       R8,@-R15
    000002D6 4F22                   STS.L       PR,@-R15
         Dodge.c   266        size_t x;
         Dodge.c   267        size_t y;
         Dodge.c   268    
         Dodge.c   269        Bdisp_AllClr_DDVRAM();
    000002D8 D329                   MOV.L       L779+8,R3  ; _Bdisp_AllClr_DDVRAM
    000002DA 7FF8                   ADD         #-8,R15
    000002DC 1F41                   MOV.L       R4,@(4,R15)
    000002DE 430B                   JSR         @R3
    000002E0 2F50                   MOV.B       R5,@R15
         Dodge.c   270    
         Dodge.c   271        for (x = 0; x < 128; x++)
    000002E2 EA40                   MOV         #64,R10
    000002E4 9848                   MOV.W       L779,R8    ; H'0080
    000002E6 EB00                   MOV         #0,R11
    000002E8 D926                   MOV.L       L779+12,R9 ; _Bdisp_SetPoint_VRAM
    000002EA 6DB3                   MOV         R11,R13
    000002EC              L648:                             
    000002EC 53F1                   MOV.L       @(4,R15),R3
         Dodge.c   272        {
         Dodge.c   273            for (y = 0; y < 64; y++)
    000002EE 6EB3                   MOV         R11,R14
    000002F0 6CD3                   MOV         R13,R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   13


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000002F2 4C08                   SHLL2       R12
    000002F4 4C08                   SHLL2       R12
    000002F6 4C08                   SHLL2       R12
    000002F8 3C3C                   ADD         R3,R12
    000002FA              L649:                             
         Dodge.c   274            {
         Dodge.c   275                if(sprite[x][y] > 0 || drawWhite) {
    000002FA 60C3                   MOV         R12,R0
    000002FC 03EC                   MOV.B       @(R0,R14),R3
    000002FE 4315                   CMP/PL      R3
    00000300 8902                   BT          L651
    00000302 63F0                   MOV.B       @R15,R3
    00000304 2338                   TST         R3,R3
    00000306 8904                   BT          L650
    00000308              L651:                             
         Dodge.c   276                    Bdisp_SetPoint_VRAM(x, y, sprite[x][y]);
    00000308 60C3                   MOV         R12,R0
    0000030A 65E3                   MOV         R14,R5
    0000030C 06EC                   MOV.B       @(R0,R14),R6
    0000030E 490B                   JSR         @R9
    00000310 64D3                   MOV         R13,R4
    00000312              L650:                             
    00000312 7E01                   ADD         #1,R14
    00000314 3EA2                   CMP/HS      R10,R14
    00000316 8BF0                   BF          L649
    00000318 7D01                   ADD         #1,R13
    0000031A 3D82                   CMP/HS      R8,R13
    0000031C 8BE6                   BF          L648
         Dodge.c   277                }
         Dodge.c   278            }
         Dodge.c   279        }
         Dodge.c   280        // Move VRAM to DD
         Dodge.c   281        Bdisp_PutDisp_DD();
    0000031E 7F08                   ADD         #8,R15
    00000320 D219                   MOV.L       L779+16,R2 ; _Bdisp_PutDisp_DD
    00000322 4F26                   LDS.L       @R15+,PR
    00000324 68F6                   MOV.L       @R15+,R8
    00000326 69F6                   MOV.L       @R15+,R9
    00000328 6AF6                   MOV.L       @R15+,R10
    0000032A 6BF6                   MOV.L       @R15+,R11
    0000032C 6CF6                   MOV.L       @R15+,R12
    0000032E 6DF6                   MOV.L       @R15+,R13
    00000330 422B                   JMP         @R2
    00000332 6EF6                   MOV.L       @R15+,R14
         Dodge.c   282        
         Dodge.c   283    }
         Dodge.c   284    
         Dodge.c   285    void RenderMainMenu() {
    00000334              _RenderMainMenu:                 ; function: RenderMainMenu
                                                           ; frame size=8196
                                                           ; used runtime library name:
                                                           ; __slow_mvn
    00000334 4F22                   STS.L       PR,@-R15
    00000336 9020                   MOV.W       L779+2,R0  ; H'E000
         Dodge.c   286        char mainMenu[128][64] = {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, },




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   14


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Dodge.c   287    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   288    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   289    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   290    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   291    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   292    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   293    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   294    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   295    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   296    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   297    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   298    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   299    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   300    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   301    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   302    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   303    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   304    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   305    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   306    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   307    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   308    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   309    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   310    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   311    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   312    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   313    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   314    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   315    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   15


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   316    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   317    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   318    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   319    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 
                         +0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   320    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
                         +0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   321    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 
                         +0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   322    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   323    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   324    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   325    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   326    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   327    {0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   328    {0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   329    {0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   330    {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   331    {0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   332    {0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   333    {0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 
                         +1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   334    {0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   335    {0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   336    {0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   337    {0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   338    {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   339    {0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 
                         +1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   340    {0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
                         +0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   341    {0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
                         +0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   342    {0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
                         +0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   343    {0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 
                         +1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, },




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   16


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Dodge.c   344    {0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   345    {0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   346    {0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   347    {0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   348    {0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   349    {0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   350    {0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 
                         +1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   351    {0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   352    {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   353    {0, 0, 0, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   354    {0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   355    {0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   356    {0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 
                         +1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   357    {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   358    {0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 
                         +1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   359    {0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
                         +0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   360    {0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
                         +0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   361    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
                         +0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   362    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 
                         +0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   363    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 
                         +1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   364    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   365    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   366    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   367    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 
                         +1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   368    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   369    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 
                         +1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   370    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   371    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   372    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   17


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   373    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   374    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 
                         +1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   375    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 
                         +0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   376    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 
                         +0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   377    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 
                         +0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   378    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 
                         +0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   379    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   380    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   381    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   382    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   383    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   384    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   385    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   386    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   387    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   388    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   389    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   390    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   391    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   392    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   393    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   394    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   395    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   396    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   397    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   398    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   399    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   400    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   18


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Dodge.c   401    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   402    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   403    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   404    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   405    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   406    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   407    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   408    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   409    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   410    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   411    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   412    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   413    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
                         +0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   414    };
    00000338 D214                   MOV.L       L779+20,R2 ; L445
    0000033A 3F0C                   ADD         R0,R15
    0000033C D314                   MOV.L       L779+24,R3 ; __slow_mvn
    0000033E 901D                   MOV.W       L779+4,R0  ; H'2000
    00000340 430B                   JSR         @R3
    00000342 61F3                   MOV         R15,R1
         Dodge.c   415        DrawImage(mainMenu, true);
    00000344 D113                   MOV.L       L779+28,R1 ; _true
    00000346 6510                   MOV.B       @R1,R5
    00000348 BFBE                   BSR         _DrawImage
    0000034A 64F3                   MOV         R15,R4
         Dodge.c   416    }
    0000034C 9116                   MOV.W       L779+4,R1  ; H'2000
    0000034E 3F1C                   ADD         R1,R15
    00000350 4F26                   LDS.L       @R15+,PR
    00000352 000B                   RTS
    00000354 0009                   NOP
         Dodge.c   417    
         Dodge.c   418    void RenderGameOver() {
    00000356              _RenderGameOver:                 ; function: RenderGameOver
                                                           ; frame size=8196
                                                           ; used runtime library name:
                                                           ; __slow_mvn
    00000356 4F22                   STS.L       PR,@-R15
    00000358 900F                   MOV.W       L779+2,R0  ; H'E000
    0000035A 3F0C                   ADD         R0,R15
         Dodge.c   419        char gameOver[128][64] = {
         Dodge.c   420            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   421            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   19


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   422            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   423            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   424            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   425            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   426            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   427            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   428            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   429            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   430            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   431            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   432            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   433            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   434            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   435            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1
                         +, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   436            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   437            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   438            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   439            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   440            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   441            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1
                         +, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   442            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   443            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0
                         +, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   444            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0
                         +, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   445            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   446            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   447            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   448            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   449            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   20


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Dodge.c   450            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   451            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   452            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   453            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   454            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   455            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   456            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   457            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   458            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   459            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   460            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   461            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   462            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   463            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   464            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   465            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   466            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   467            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   468            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   469            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   470            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   471            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   472            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   473            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   474            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   475            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   476            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   477            {0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   478            {0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   21


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   479            {0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   480            {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   481            {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   482            {0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   483            {0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   484            {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   485            {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   486            {0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   487            {0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   488            {0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   489            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   490            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1
                         +, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   491            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1
                         +, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   492            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1
                         +, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   493            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   494            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   495            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   496            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   497            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   498            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   499            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   500            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   501            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   502            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1
                         +, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   503            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   504            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   505            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   506            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   22


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Dodge.c   507            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   508            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   509            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   510            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   511            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   512            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   513            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   514            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   515            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   516            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   517            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   518            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   519            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   520            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   521            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   522            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   523            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   524            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   525            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   526            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   527            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   528            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   529            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   530            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   531            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   532            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   533            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   534            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   535            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   23


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   536            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   537            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   538            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   539            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   540            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, },
         Dodge.c   541            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   542            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   543            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   544            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   545            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   546            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   547            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
                         +, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, },
         Dodge.c   548        };
    0000035C D20E                   MOV.L       L779+32,R2 ; L449
    0000035E 900D                   MOV.W       L779+4,R0  ; H'2000
    00000360 D30B                   MOV.L       L779+24,R3 ; __slow_mvn
    00000362 430B                   JSR         @R3
    00000364 61F3                   MOV         R15,R1
         Dodge.c   549    
         Dodge.c   550        DrawImage(gameOver, true);
    00000366 D10B                   MOV.L       L779+28,R1 ; _true
    00000368 6510                   MOV.B       @R1,R5
    0000036A BFAD                   BSR         _DrawImage
    0000036C 64F3                   MOV         R15,R4
         Dodge.c   551    }
    0000036E 9105                   MOV.W       L779+4,R1  ; H'2000
    00000370 3F1C                   ADD         R1,R15
    00000372 4F26                   LDS.L       @R15+,PR
    00000374 000B                   RTS
    00000376 0009                   NOP
    00000378              L779:                             
    00000378 0080                   .DATA.W     H'0080
    0000037A E000                   .DATA.W     H'E000
    0000037C 2000                   .DATA.W     H'2000
    0000037E 0000                   .DATA.W     0
    00000380 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    00000384 <00000000>             .DATA.L     _Bdisp_SetPoint_VRAM
    00000388 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
    0000038C <00000000>             .DATA.L     L445
    00000390 <00000000>             .DATA.L     __slow_mvn
    00000394 <00000000>             .DATA.L     _true
    00000398 <00000000>             .DATA.L     L449
         Dodge.c   552    
         Dodge.c   553    /** Draws the projectils */




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   24


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Dodge.c   554    void DrawProjectiles()
    0000039C              _DrawProjectiles:                ; function: DrawProjectiles
                                                           ; frame size=60
                                                           ; used runtime library name:
                                                           ; __adds, __subs, __muls, __stoi, __itos, __gts, __lts, __ges, __les
    0000039C 2FE6                   MOV.L       R14,@-R15
    0000039E 2FD6                   MOV.L       R13,@-R15
    000003A0 2FC6                   MOV.L       R12,@-R15
    000003A2 2FB6                   MOV.L       R11,@-R15
    000003A4 2FA6                   MOV.L       R10,@-R15
    000003A6 2F96                   MOV.L       R9,@-R15
    000003A8 2F86                   MOV.L       R8,@-R15
    000003AA 4F22                   STS.L       PR,@-R15
    000003AC D44B                   MOV.L       L780+2,R4  ; _projectiles
    000003AE 7FE4                   ADD         #-28,R15
    000003B0 DA4B                   MOV.L       L780+6,R10 ; _Bdisp_SetPoint_VRAM
    000003B2 6543                   MOV         R4,R5
    000003B4 9391                   MOV.W       L780,R3    ; H'1000
    000003B6 6D43                   MOV         R4,R13
    000003B8 6943                   MOV         R4,R9
    000003BA 343C                   ADD         R3,R4
    000003BC 1F46                   MOV.L       R4,@(24,R15)
         Dodge.c   555    {   
         Dodge.c   556        float x1;
         Dodge.c   557        float y1;
         Dodge.c   558        float x2;
         Dodge.c   559        float y2;
         Dodge.c   560        float dx;
         Dodge.c   561        float dy;
         Dodge.c   562        int x;
         Dodge.c   563        int y;
         Dodge.c   564        int decide;
         Dodge.c   565        int pk;
         Dodge.c   566        int j;
         Dodge.c   567    
         Dodge.c   568        size_t i;
         Dodge.c   569        for (i = 0; i < 128; i++)
    000003BE              L652:                             
         Dodge.c   570        {
         Dodge.c   571            if(projectiles[i].enabled) {
    000003BE 6390                   MOV.B       @R9,R3
    000003C0 2338                   TST         R3,R3
    000003C2 8B01                   BF          L781
    000003C4 A0D9                   BRA         L653
    000003C6 0009                   NOP
    000003C8              L781:                             
         Dodge.c   572                x1 = projectiles[i].x;
    000003C8 54D1                   MOV.L       @(4,R13),R4
    000003CA 1F41                   MOV.L       R4,@(4,R15)
         Dodge.c   573                y1 = projectiles[i].y;
    000003CC 55D2                   MOV.L       @(8,R13),R5
         Dodge.c   574                x2 = projectiles[i].x + projectiles[i].xVelocity;
    000003CE 6143                   MOV         R4,R1
    000003D0 D344                   MOV.L       L780+10,R3 ; __adds
    000003D2 2F52                   MOV.L       R5,@R15
    000003D4 430B                   JSR         @R3
    000003D6 50D3                   MOV.L       @(12,R13),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   25


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Dodge.c   575                y2 = projectiles[i].y + projectiles[i].yVelocity;
    000003D8 D242                   MOV.L       L780+10,R2 ; __adds
    000003DA 6803                   MOV         R0,R8
    000003DC 6153                   MOV         R5,R1
    000003DE 420B                   JSR         @R2
    000003E0 50D4                   MOV.L       @(16,R13),R0
         Dodge.c   576                Bdisp_SetPoint_VRAM(x1, y1, 1);
    000003E2 E601                   MOV         #1,R6
    000003E4 D240                   MOV.L       L780+14,R2 ; __stoi
    000003E6 1F02                   MOV.L       R0,@(8,R15)
    000003E8 420B                   JSR         @R2
    000003EA 60F2                   MOV.L       @R15,R0
    000003EC D33E                   MOV.L       L780+14,R3 ; __stoi
    000003EE 6503                   MOV         R0,R5
    000003F0 430B                   JSR         @R3
    000003F2 50F1                   MOV.L       @(4,R15),R0
    000003F4 4A0B                   JSR         @R10
    000003F6 6403                   MOV         R0,R4
         Dodge.c   577                Bdisp_SetPoint_VRAM(x2, y2, 1);
    000003F8 D33B                   MOV.L       L780+14,R3 ; __stoi
    000003FA E601                   MOV         #1,R6
    000003FC 430B                   JSR         @R3
    000003FE 50F2                   MOV.L       @(8,R15),R0
    00000400 D339                   MOV.L       L780+14,R3 ; __stoi
    00000402 6503                   MOV         R0,R5
    00000404 430B                   JSR         @R3
    00000406 6083                   MOV         R8,R0
    00000408 4A0B                   JSR         @R10
    0000040A 6403                   MOV         R0,R4
         Dodge.c   578    
         Dodge.c   579                // Bresenham's Line Generation Algorithm implementation stolen from https://www.geeksforgeeks.
                         +org/bresenhams-line-generation-algorithm/
         Dodge.c   580                dx = abs(x2 - x1);
    0000040C D237                   MOV.L       L780+18,R2 ; __subs
    0000040E 6183                   MOV         R8,R1
    00000410 420B                   JSR         @R2
    00000412 50F1                   MOV.L       @(4,R15),R0
    00000414 D334                   MOV.L       L780+14,R3 ; __stoi
    00000416 430B                   JSR         @R3
    00000418 0009                   NOP
    0000041A D235                   MOV.L       L780+22,R2 ; _abs
    0000041C 420B                   JSR         @R2
    0000041E 6403                   MOV         R0,R4
    00000420 D334                   MOV.L       L780+26,R3 ; __itos
    00000422 430B                   JSR         @R3
    00000424 0009                   NOP
    00000426 6B03                   MOV         R0,R11
         Dodge.c   581                dy = abs(y2 - y1);
    00000428 51F2                   MOV.L       @(8,R15),R1
    0000042A D230                   MOV.L       L780+18,R2 ; __subs
    0000042C 420B                   JSR         @R2
    0000042E 60F2                   MOV.L       @R15,R0
    00000430 D32D                   MOV.L       L780+14,R3 ; __stoi
    00000432 430B                   JSR         @R3
    00000434 0009                   NOP
    00000436 D22E                   MOV.L       L780+22,R2 ; _abs
    00000438 420B                   JSR         @R2




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   26


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000043A 6403                   MOV         R0,R4
    0000043C D32D                   MOV.L       L780+26,R3 ; __itos
    0000043E 430B                   JSR         @R3
    00000440 0009                   NOP
    00000442 6403                   MOV         R0,R4
         Dodge.c   582    
         Dodge.c   583                decide = (dx > dy);
    00000444 D22C                   MOV.L       L780+30,R2 ; __gts
    00000446 420B                   JSR         @R2
    00000448 61B3                   MOV         R11,R1
    0000044A 1F03                   MOV.L       R0,@(12,R15)
         Dodge.c   584                
         Dodge.c   585                pk = 2 * dy - dx;
    0000044C D02B                   MOV.L       L780+34,R0 ; H'40000000
    0000044E D22C                   MOV.L       L780+38,R2 ; __muls
    00000450 420B                   JSR         @R2
    00000452 6143                   MOV         R4,R1
    00000454 D325                   MOV.L       L780+18,R3 ; __subs
    00000456 6C03                   MOV         R0,R12
    00000458 6103                   MOV         R0,R1
    0000045A 430B                   JSR         @R3
    0000045C 60B3                   MOV         R11,R0
    0000045E D222                   MOV.L       L780+14,R2 ; __stoi
    00000460 420B                   JSR         @R2
    00000462 0009                   NOP
    00000464 D226                   MOV.L       L780+38,R2 ; __muls
    00000466 6E03                   MOV         R0,R14
    00000468 D024                   MOV.L       L780+34,R0 ; H'40000000
         Dodge.c   586                for (j = 0; j <= dx; j++) {
    0000046A E300                   MOV         #0,R3
    0000046C 1F34                   MOV.L       R3,@(16,R15)
    0000046E 420B                   JSR         @R2
    00000470 61B3                   MOV         R11,R1
    00000472 D31E                   MOV.L       L780+18,R3 ; __subs
    00000474 430B                   JSR         @R3
    00000476 61C3                   MOV         R12,R1
    00000478 1F05                   MOV.L       R0,@(20,R15)
    0000047A E100                   MOV         #0,R1
    0000047C D321                   MOV.L       L780+42,R3 ; __les
    0000047E 430B                   JSR         @R3
    00000480 60B3                   MOV         R11,R0
    00000482 8800                   CMP/EQ      #0,R0
    00000484 8979                   BT          L653
    00000486              L655:                             
         Dodge.c   587                    Bdisp_SetPoint_VRAM(x1, y1, 1);
    00000486 E601                   MOV         #1,R6
    00000488 D217                   MOV.L       L780+14,R2 ; __stoi
    0000048A 420B                   JSR         @R2
    0000048C 60F2                   MOV.L       @R15,R0
    0000048E 6503                   MOV         R0,R5
    00000490 D315                   MOV.L       L780+14,R3 ; __stoi
    00000492 430B                   JSR         @R3
    00000494 50F1                   MOV.L       @(4,R15),R0
    00000496 4A0B                   JSR         @R10
    00000498 6403                   MOV         R0,R4
         Dodge.c   588                    
         Dodge.c   589                    // checking either to decrement or increment the




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   27


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Dodge.c   590                    // value if we have to plot from (0,100) to (100,0)
         Dodge.c   591                    x1 < x2 ? x1++ : x1--;
    0000049A 51F1                   MOV.L       @(4,R15),R1
    0000049C D31A                   MOV.L       L780+46,R3 ; __lts
    0000049E 430B                   JSR         @R3
    000004A0 6083                   MOV         R8,R0
    000004A2 8800                   CMP/EQ      #0,R0
    000004A4 8906                   BT          L656
    000004A6 D119                   MOV.L       L780+50,R1 ; H'3F800000
    000004A8 D20E                   MOV.L       L780+10,R2 ; __adds
    000004AA 420B                   JSR         @R2
    000004AC 50F1                   MOV.L       @(4,R15),R0
    000004AE 1F01                   MOV.L       R0,@(4,R15)
    000004B0 A006                   BRA         L657
    000004B2 0009                   NOP
    000004B4              L656:                             
    000004B4 51F1                   MOV.L       @(4,R15),R1
    000004B6 D015                   MOV.L       L780+50,R0 ; H'3F800000
    000004B8 D30C                   MOV.L       L780+18,R3 ; __subs
    000004BA 430B                   JSR         @R3
    000004BC 0009                   NOP
    000004BE 1F01                   MOV.L       R0,@(4,R15)
    000004C0              L657:                             
         Dodge.c   592                    if (pk < 0) {
    000004C0 4E11                   CMP/PZ      R14
    000004C2 8930                   BT          L658
         Dodge.c   593                        // decision value will decide to plot
         Dodge.c   594                        // either  x1 or y1 in x's position
         Dodge.c   595                        if (decide == 0) {
    000004C4 52F3                   MOV.L       @(12,R15),R2
    000004C6 2228                   TST         R2,R2
    000004C8 8B22                   BF          L659
         Dodge.c   596                            // putpixel(x1, y1, RED);
         Dodge.c   597                            pk = pk + 2 * dy;
    000004CA D30A                   MOV.L       L780+26,R3 ; __itos
    000004CC 430B                   JSR         @R3
    000004CE 60E3                   MOV         R14,R0
    000004D0 D204                   MOV.L       L780+10,R2 ; __adds
    000004D2 420B                   JSR         @R2
    000004D4 61C3                   MOV         R12,R1
    000004D6 A021                   BRA         L770
    000004D8 0009                   NOP
    000004DA              L780:                             
    000004DA 1000                   .DATA.W     H'1000
    000004DC <00000000>             .DATA.L     _projectiles
    000004E0 <00000000>             .DATA.L     _Bdisp_SetPoint_VRAM
    000004E4 <00000000>             .DATA.L     __adds
    000004E8 <00000000>             .DATA.L     __stoi
    000004EC <00000000>             .DATA.L     __subs
    000004F0 <00000000>             .DATA.L     _abs
    000004F4 <00000000>             .DATA.L     __itos
    000004F8 <00000000>             .DATA.L     __gts
    000004FC 40000000               .DATA.L     H'40000000
    00000500 <00000000>             .DATA.L     __muls
    00000504 <00000000>             .DATA.L     __les
    00000508 <00000000>             .DATA.L     __lts
    0000050C 3F800000               .DATA.L     H'3F800000




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   28


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000510              L659:                             
         Dodge.c   598                        }
         Dodge.c   599                        else {
         Dodge.c   600                            //(y1,x1) is passed in xt
         Dodge.c   601                            // putpixel(y1, x1, YELLOW);
         Dodge.c   602                            pk = pk + 2 * dy;
    00000510 D359                   MOV.L       L782,R3    ; __itos
    00000512 430B                   JSR         @R3
    00000514 60E3                   MOV         R14,R0
    00000516 D259                   MOV.L       L782+4,R2  ; __adds
    00000518 420B                   JSR         @R2
    0000051A 61C3                   MOV         R12,R1
    0000051C              L770:                             
    0000051C D358                   MOV.L       L782+8,R3  ; __stoi
    0000051E 430B                   JSR         @R3
    00000520 0009                   NOP
    00000522 A01F                   BRA         L661
    00000524 6E03                   MOV         R0,R14
    00000526              L658:                             
         Dodge.c   603                        }
         Dodge.c   604                    }
         Dodge.c   605                    else {
         Dodge.c   606                        y1 < y2 ? y1++ : y1--;
    00000526 61F2                   MOV.L       @R15,R1
    00000528 D356                   MOV.L       L782+12,R3 ; __lts
    0000052A 430B                   JSR         @R3
    0000052C 50F2                   MOV.L       @(8,R15),R0
    0000052E 8800                   CMP/EQ      #0,R0
    00000530 8906                   BT          L662
    00000532 D155                   MOV.L       L782+16,R1 ; H'3F800000
    00000534 D251                   MOV.L       L782+4,R2  ; __adds
    00000536 420B                   JSR         @R2
    00000538 60F2                   MOV.L       @R15,R0
    0000053A 2F02                   MOV.L       R0,@R15
    0000053C A006                   BRA         L663
    0000053E 0009                   NOP
    00000540              L662:                             
    00000540 61F2                   MOV.L       @R15,R1
    00000542 D051                   MOV.L       L782+16,R0 ; H'3F800000
    00000544 D351                   MOV.L       L782+20,R3 ; __subs
    00000546 430B                   JSR         @R3
    00000548 0009                   NOP
    0000054A 2F02                   MOV.L       R0,@R15
    0000054C              L663:                             
         Dodge.c   607                        if (decide == 0) {
    0000054C 53F3                   MOV.L       @(12,R15),R3
    0000054E 2338                   TST         R3,R3
         Dodge.c   608            
         Dodge.c   609                            // putpixel(x1, y1, RED);
         Dodge.c   610                        }
         Dodge.c   611                        else {
         Dodge.c   612                            //  putpixel(y1, x1, YELLOW);
         Dodge.c   613                        }
         Dodge.c   614                        pk = pk + 2 * dy - 2 * dx;
    00000550 D349                   MOV.L       L782,R3    ; __itos
    00000552 430B                   JSR         @R3
    00000554 60E3                   MOV         R14,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   29


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000556 D249                   MOV.L       L782+4,R2  ; __adds
    00000558 420B                   JSR         @R2
    0000055A 51F5                   MOV.L       @(20,R15),R1
    0000055C D348                   MOV.L       L782+8,R3  ; __stoi
    0000055E 430B                   JSR         @R3
    00000560 0009                   NOP
    00000562 6E03                   MOV         R0,R14
    00000564              L661:                             
    00000564 52F4                   MOV.L       @(16,R15),R2
    00000566 7201                   ADD         #1,R2
    00000568 1F24                   MOV.L       R2,@(16,R15)
    0000056A D343                   MOV.L       L782,R3    ; __itos
    0000056C 430B                   JSR         @R3
    0000056E 6023                   MOV         R2,R0
    00000570 D347                   MOV.L       L782+24,R3 ; __ges
    00000572 430B                   JSR         @R3
    00000574 61B3                   MOV         R11,R1
    00000576 8800                   CMP/EQ      #0,R0
    00000578 8B85                   BF          L655
    0000057A              L653:                             
    0000057A 7920                   ADD         #32,R9
    0000057C 52F6                   MOV.L       @(24,R15),R2
    0000057E 3922                   CMP/HS      R2,R9
    00000580 8D02                   BT/S        L783
    00000582 7D20                   ADD         #32,R13
    00000584 AF1B                   BRA         L652
    00000586 0009                   NOP
    00000588              L783:                             
         Dodge.c   615                    }
         Dodge.c   616                }
         Dodge.c   617            }
         Dodge.c   618        }
         Dodge.c   619    }
    00000588 7F1C                   ADD         #28,R15
    0000058A 4F26                   LDS.L       @R15+,PR
    0000058C 68F6                   MOV.L       @R15+,R8
    0000058E 69F6                   MOV.L       @R15+,R9
    00000590 6AF6                   MOV.L       @R15+,R10
    00000592 6BF6                   MOV.L       @R15+,R11
    00000594 6CF6                   MOV.L       @R15+,R12
    00000596 6DF6                   MOV.L       @R15+,R13
    00000598 000B                   RTS
    0000059A 6EF6                   MOV.L       @R15+,R14
         Dodge.c   620    
         Dodge.c   621    /** Draws the player */
         Dodge.c   622    void DrawPlayer()
    0000059C              _DrawPlayer:                     ; function: DrawPlayer
                                                           ; frame size=20
                                                           ; used runtime library name:
                                                           ; __modls
    0000059C 2FE6                   MOV.L       R14,@-R15
    0000059E 2FD6                   MOV.L       R13,@-R15
    000005A0 2FC6                   MOV.L       R12,@-R15
    000005A2 2FB6                   MOV.L       R11,@-R15
    000005A4 4F22                   STS.L       PR,@-R15
         Dodge.c   623    {   
         Dodge.c   624        if(damaged) {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   30


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000005A6 DB3B                   MOV.L       L782+28,R11; _flicker
    000005A8 D23B                   MOV.L       L782+32,R2 ; _damaged
    000005AA 6320                   MOV.B       @R2,R3
    000005AC 2338                   TST         R3,R3
    000005AE 890E                   BT          L666
         Dodge.c   625            if((timer - flickerOffset) % 10 == 0) { // damage flash animation
    000005B0 D03A                   MOV.L       L782+36,R0 ; _flickerOffset
    000005B2 6302                   MOV.L       @R0,R3
    000005B4 D23A                   MOV.L       L782+40,R2 ; _timer
    000005B6 6122                   MOV.L       @R2,R1
    000005B8 D23A                   MOV.L       L782+44,R2 ; __modls
    000005BA 3138                   SUB         R3,R1
    000005BC 420B                   JSR         @R2
    000005BE E00A                   MOV         #10,R0
    000005C0 2008                   TST         R0,R0
    000005C2 8B06                   BF          L669
         Dodge.c   626                flicker = !flicker;
    000005C4 60B0                   MOV.B       @R11,R0
    000005C6 2008                   TST         R0,R0
    000005C8 0029                   MOVT        R0
    000005CA A002                   BRA         L669
    000005CC 2B00                   MOV.B       R0,@R11
    000005CE              L666:                             
         Dodge.c   627            }
         Dodge.c   628        }
         Dodge.c   629        else
         Dodge.c   630            flicker = 1;
    000005CE E101                   MOV         #1,R1
    000005D0 2B10                   MOV.B       R1,@R11
    000005D2              L669:                             
         Dodge.c   631        Bdisp_SetPoint_VRAM(playerX, playerY, flicker); // middle
    000005D2 DC35                   MOV.L       L782+48,R12; _playerY
    000005D4 DD35                   MOV.L       L782+52,R13; _Bdisp_SetPoint_VRAM
    000005D6 DE36                   MOV.L       L782+56,R14; _playerX
    000005D8 66B0                   MOV.B       @R11,R6
    000005DA 65C2                   MOV.L       @R12,R5
    000005DC 4D0B                   JSR         @R13
    000005DE 64E2                   MOV.L       @R14,R4
         Dodge.c   632        Bdisp_SetPoint_VRAM(playerX+1, playerY, 1);
    000005E0 65C2                   MOV.L       @R12,R5
    000005E2 E601                   MOV         #1,R6
    000005E4 64E2                   MOV.L       @R14,R4
    000005E6 4D0B                   JSR         @R13
    000005E8 7401                   ADD         #1,R4
         Dodge.c   633        Bdisp_SetPoint_VRAM(playerX-1, playerY, 1);
    000005EA E601                   MOV         #1,R6
    000005EC 65C2                   MOV.L       @R12,R5
    000005EE 64E2                   MOV.L       @R14,R4
    000005F0 4D0B                   JSR         @R13
    000005F2 74FF                   ADD         #-1,R4
         Dodge.c   634        Bdisp_SetPoint_VRAM(playerX, playerY+1, 1);
    000005F4 65C2                   MOV.L       @R12,R5
    000005F6 E601                   MOV         #1,R6
    000005F8 7501                   ADD         #1,R5
    000005FA 4D0B                   JSR         @R13
    000005FC 64E2                   MOV.L       @R14,R4
         Dodge.c   635        Bdisp_SetPoint_VRAM(playerX, playerY-1, 1);




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   31


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000005FE E601                   MOV         #1,R6
    00000600 65C2                   MOV.L       @R12,R5
    00000602 75FF                   ADD         #-1,R5
    00000604 4D0B                   JSR         @R13
    00000606 64E2                   MOV.L       @R14,R4
         Dodge.c   636    }
    00000608 4F26                   LDS.L       @R15+,PR
    0000060A 6BF6                   MOV.L       @R15+,R11
    0000060C 6CF6                   MOV.L       @R15+,R12
    0000060E 6DF6                   MOV.L       @R15+,R13
    00000610 000B                   RTS
    00000612 6EF6                   MOV.L       @R15+,R14
         Dodge.c   637    void NotDamaged() {
    00000614              _NotDamaged:                     ; function: NotDamaged
                                                           ; frame size=0
         Dodge.c   638        damaged = false;
    00000614 D227                   MOV.L       L782+60,R2 ; _false
    00000616 6320                   MOV.B       @R2,R3
    00000618 D11F                   MOV.L       L782+32,R1 ; _damaged
    0000061A 2130                   MOV.B       R3,@R1
         Dodge.c   639        KillTimer(ID_USER_TIMER4);
    0000061C D326                   MOV.L       L782+64,R3 ; _KillTimer
    0000061E 432B                   JMP         @R3
    00000620 E404                   MOV         #4,R4
         Dodge.c   640        // if the player is damaged multiple times within one second, the animation will only play for 2 secon
                         +ds from the
         Dodge.c   641        // first hit. i can't really be bothered fixing this
         Dodge.c   642    }
         Dodge.c   643    
         Dodge.c   644    void DrawHealthBar() {
    00000622              _DrawHealthBar:                  ; function: DrawHealthBar
                                                           ; frame size=20
                                                           ; used runtime library name:
                                                           ; __modls
    00000622 2FE6                   MOV.L       R14,@-R15
    00000624 2FD6                   MOV.L       R13,@-R15
    00000626 2FC6                   MOV.L       R12,@-R15
    00000628 2FB6                   MOV.L       R11,@-R15
    0000062A 4F22                   STS.L       PR,@-R15
         Dodge.c   645        size_t i;
         Dodge.c   646        if(playerHealth > 0)
    0000062C DC23                   MOV.L       L782+68,R12; _playerHealth
    0000062E DD1F                   MOV.L       L782+52,R13; _Bdisp_SetPoint_VRAM
    00000630 63C2                   MOV.L       @R12,R3
    00000632 4315                   CMP/PL      R3
    00000634 8B0A                   BF          L670
         Dodge.c   647            for (i = 0; i < playerHealth * 2; i++) // health bar
    00000636 A005                   BRA         L671
    00000638 EE00                   MOV         #0,R14
    0000063A              L672:                             
         Dodge.c   648                Bdisp_SetPoint_VRAM(i, 63, 1);
    0000063A E601                   MOV         #1,R6
    0000063C E53F                   MOV         #63,R5
    0000063E 4D0B                   JSR         @R13
    00000640 64E3                   MOV         R14,R4
    00000642 7E01                   ADD         #1,R14
    00000644              L671:                             




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   32


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000644 62C2                   MOV.L       @R12,R2
    00000646 4200                   SHLL        R2
    00000648 3E22                   CMP/HS      R2,R14
    0000064A 8BF6                   BF          L672
    0000064C              L670:                             
         Dodge.c   649        for (i = 0; i < (timer % 100); i++) // bar until next attack
    0000064C DB14                   MOV.L       L782+40,R11; _timer
    0000064E EC64                   MOV         #100,R12
    00000650 A006                   BRA         L673
    00000652 EE00                   MOV         #0,R14
    00000654              L674:                             
         Dodge.c   650            Bdisp_SetPoint_VRAM(14 + i, 1, 1); // + 14 so that it's centered (half of 28) (128-100=28) (screen
                         + is 128 wide)
    00000654 E601                   MOV         #1,R6
    00000656 6563                   MOV         R6,R5
    00000658 64E3                   MOV         R14,R4
    0000065A 4D0B                   JSR         @R13
    0000065C 740E                   ADD         #14,R4
    0000065E 7E01                   ADD         #1,R14
    00000660              L673:                             
    00000660 61B2                   MOV.L       @R11,R1
    00000662 D310                   MOV.L       L782+44,R3 ; __modls
    00000664 430B                   JSR         @R3
    00000666 60C3                   MOV         R12,R0
    00000668 3E02                   CMP/HS      R0,R14
    0000066A 8BF3                   BF          L674
         Dodge.c   651    }
    0000066C 4F26                   LDS.L       @R15+,PR
    0000066E 6BF6                   MOV.L       @R15+,R11
    00000670 6CF6                   MOV.L       @R15+,R12
    00000672 6DF6                   MOV.L       @R15+,R13
    00000674 000B                   RTS
    00000676 6EF6                   MOV.L       @R15+,R14
    00000678              L782:                             
    00000678 <00000000>             .DATA.L     __itos
    0000067C <00000000>             .DATA.L     __adds
    00000680 <00000000>             .DATA.L     __stoi
    00000684 <00000000>             .DATA.L     __lts
    00000688 3F800000               .DATA.L     H'3F800000
    0000068C <00000000>             .DATA.L     __subs
    00000690 <00000000>             .DATA.L     __ges
    00000694 <00000000>             .DATA.L     _flicker
    00000698 <00000000>             .DATA.L     _damaged
    0000069C <00000000>             .DATA.L     _flickerOffset
    000006A0 <00000000>             .DATA.L     _timer
    000006A4 <00000000>             .DATA.L     __modls
    000006A8 <00000000>             .DATA.L     _playerY
    000006AC <00000000>             .DATA.L     _Bdisp_SetPoint_VRAM
    000006B0 <00000000>             .DATA.L     _playerX
    000006B4 <00000000>             .DATA.L     _false
    000006B8 <00000000>             .DATA.L     _KillTimer
    000006BC <00000000>             .DATA.L     _playerHealth
         Dodge.c   652    
         Dodge.c   653    #pragma endregion
         Dodge.c   654    
         Dodge.c   655    // spawn a new projectile at x and y with velocity and acceleration
         Dodge.c   656    void SpawnProjectile(float x, float y, float xVelocity, float yVelocity, float xAcceleration, float yAccel




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   33


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                         +eration, float trackingForce) {
    000006C0              _SpawnProjectile:                ; function: SpawnProjectile
                                                           ; frame size=20
    000006C0 2FE6                   MOV.L       R14,@-R15
    000006C2 2FD6                   MOV.L       R13,@-R15
    000006C4 2FB6                   MOV.L       R11,@-R15
    000006C6 7FF8                   ADD         #-8,R15
    000006C8 DE2B                   MOV.L       L784+4,R14 ; _projectiles
    000006CA 2FE2                   MOV.L       R14,@R15
    000006CC 1FE1                   MOV.L       R14,@(4,R15)
    000006CE 6DE3                   MOV         R14,R13
    000006D0 9350                   MOV.W       L784,R3    ; H'1000
    000006D2 61F2                   MOV.L       @R15,R1
         Dodge.c   657        size_t i;
         Dodge.c   658        for (i = 0; i < 128; i++)
    000006D4 DB29                   MOV.L       L784+8,R11 ; _true
    000006D6 313C                   ADD         R3,R1
    000006D8 3D12                   CMP/HS      R1,R13
    000006DA 8913                   BT          L678
    000006DC              L676:                             
         Dodge.c   659        {
         Dodge.c   660            if(!projectiles[i].enabled) { // found a free spot in the array
    000006DC 63D0                   MOV.B       @R13,R3
    000006DE 2338                   TST         R3,R3
    000006E0 8B0C                   BF          L677
         Dodge.c   661                // set up the projectile
         Dodge.c   662                projectiles[i].x = x;
    000006E2 1E41                   MOV.L       R4,@(4,R14)
         Dodge.c   663                projectiles[i].y = y;
    000006E4 1E52                   MOV.L       R5,@(8,R14)
         Dodge.c   664                projectiles[i].xVelocity = xVelocity;
    000006E6 1E63                   MOV.L       R6,@(12,R14)
         Dodge.c   665                projectiles[i].yVelocity = yVelocity;
    000006E8 1E74                   MOV.L       R7,@(16,R14)
         Dodge.c   666                projectiles[i].xAcceleration = xAcceleration;
    000006EA 53F5                   MOV.L       @(20,R15),R3
    000006EC 1E35                   MOV.L       R3,@(20,R14)
         Dodge.c   667                projectiles[i].yAcceleration = yAcceleration;
    000006EE 52F6                   MOV.L       @(24,R15),R2
    000006F0 1E26                   MOV.L       R2,@(24,R14)
         Dodge.c   668                projectiles[i].trackingForce = trackingForce;
    000006F2 53F7                   MOV.L       @(28,R15),R3
    000006F4 1E37                   MOV.L       R3,@(28,R14)
         Dodge.c   669                // enable it
         Dodge.c   670                projectiles[i].enabled = true;
    000006F6 62B0                   MOV.B       @R11,R2
         Dodge.c   671                // stop the loop, we're done
         Dodge.c   672                return;
    000006F8 A004                   BRA         L678
    000006FA 2E20                   MOV.B       R2,@R14
    000006FC              L677:                             
    000006FC 7D20                   ADD         #32,R13
    000006FE 3D12                   CMP/HS      R1,R13
    00000700 8FEC                   BF/S        L676
    00000702 7E20                   ADD         #32,R14
    00000704              L678:                             
         Dodge.c   673            }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   34


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Dodge.c   674        }
         Dodge.c   675        
         Dodge.c   676    }
    00000704 7F08                   ADD         #8,R15
    00000706 6BF6                   MOV.L       @R15+,R11
    00000708 6DF6                   MOV.L       @R15+,R13
    0000070A 000B                   RTS
    0000070C 6EF6                   MOV.L       @R15+,R14
         Dodge.c   677    
         Dodge.c   678    int IsCollidingWithPlayer(int x, int y) {
    0000070E              _IsCollidingWithPlayer:          ; function: IsCollidingWithPlayer
                                                           ; frame size=12
    0000070E 4F22                   STS.L       PR,@-R15
         Dodge.c   679        return (abs(x - playerX) < 2 && abs(y - playerY) < 2);
    00000710 D21B                   MOV.L       L784+12,R2 ; _playerX
    00000712 7FF8                   ADD         #-8,R15
    00000714 D11B                   MOV.L       L784+16,R1 ; _abs
    00000716 1F41                   MOV.L       R4,@(4,R15)
    00000718 2F52                   MOV.L       R5,@R15
    0000071A 6322                   MOV.L       @R2,R3
    0000071C 54F1                   MOV.L       @(4,R15),R4
    0000071E 410B                   JSR         @R1
    00000720 3438                   SUB         R3,R4
    00000722 E302                   MOV         #2,R3
    00000724 3033                   CMP/GE      R3,R0
    00000726 890C                   BT          L679
    00000728 D117                   MOV.L       L784+20,R1 ; _playerY
    0000072A 6212                   MOV.L       @R1,R2
    0000072C 64F2                   MOV.L       @R15,R4
    0000072E D315                   MOV.L       L784+16,R3 ; _abs
    00000730 430B                   JSR         @R3
    00000732 3428                   SUB         R2,R4
    00000734 E202                   MOV         #2,R2
    00000736 3023                   CMP/GE      R2,R0
    00000738 8903                   BT          L679
    0000073A 7F08                   ADD         #8,R15
    0000073C 4F26                   LDS.L       @R15+,PR
    0000073E 000B                   RTS
    00000740 E001                   MOV         #1,R0
    00000742              L679:                             
    00000742 E000                   MOV         #0,R0
         Dodge.c   680    }
    00000744              L681:                             
    00000744 7F08                   ADD         #8,R15
    00000746 4F26                   LDS.L       @R15+,PR
    00000748 000B                   RTS
    0000074A 0009                   NOP
         Dodge.c   681    
         Dodge.c   682    #pragma region Timer functions
         Dodge.c   683    
         Dodge.c   684    /** Timer #2: Renders screen */
         Dodge.c   685    void RenderScreen()
    0000074C              _RenderScreen:                   ; function: RenderScreen
                                                           ; frame size=4
    0000074C 4F22                   STS.L       PR,@-R15
         Dodge.c   686    {
         Dodge.c   687        if(!quit) {




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   35


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000074E D10F                   MOV.L       L784+24,R1 ; _quit
    00000750 6310                   MOV.B       @R1,R3
    00000752 2338                   TST         R3,R3
    00000754 8B0B                   BF          L682
         Dodge.c   688            // Clear current screen
         Dodge.c   689            Bdisp_AllClr_VRAM();
    00000756 D30E                   MOV.L       L784+28,R3 ; _Bdisp_AllClr_VRAM
    00000758 430B                   JSR         @R3
    0000075A 0009                   NOP
         Dodge.c   690                
         Dodge.c   691            // Draw the different parts of the screen
         Dodge.c   692            DrawProjectiles();
    0000075C BE1E                   BSR         _DrawProjectiles
    0000075E 0009                   NOP
         Dodge.c   693            DrawPlayer();
    00000760 BF1C                   BSR         _DrawPlayer
    00000762 0009                   NOP
         Dodge.c   694            DrawHealthBar();
    00000764 BF5D                   BSR         _DrawHealthBar
    00000766 0009                   NOP
         Dodge.c   695    
         Dodge.c   696            // Move VRAM to DD
         Dodge.c   697            Bdisp_PutDisp_DD();
    00000768 D30A                   MOV.L       L784+32,R3 ; _Bdisp_PutDisp_DD
    0000076A 432B                   JMP         @R3
    0000076C 4F26                   LDS.L       @R15+,PR
    0000076E              L682:                             
         Dodge.c   698        }
         Dodge.c   699    }
    0000076E 4F26                   LDS.L       @R15+,PR
    00000770 000B                   RTS
    00000772 0009                   NOP
    00000774              L784:                             
    00000774 1000                   .DATA.W     H'1000
    00000776 0000                   .DATA.W     0
    00000778 <00000000>             .DATA.L     _projectiles
    0000077C <00000000>             .DATA.L     _true
    00000780 <00000000>             .DATA.L     _playerX
    00000784 <00000000>             .DATA.L     _abs
    00000788 <00000000>             .DATA.L     _playerY
    0000078C <00000000>             .DATA.L     _quit
    00000790 <00000000>             .DATA.L     _Bdisp_AllClr_VRAM
    00000794 <00000000>             .DATA.L     _Bdisp_PutDisp_DD
         Dodge.c   700    
         Dodge.c   701    void MoveProjectile(int arrayIndex, float x1, float y1, float x2, float y2) {
    00000798              _MoveProjectile:                 ; function: MoveProjectile
                                                           ; frame size=56
                                                           ; used runtime library name:
                                                           ; __modls, __adds, __subs, __muls, __stoi, __itos, __gts, __lts, __ges, _
                        +                                  _les
    00000798 2FE6                   MOV.L       R14,@-R15
         Dodge.c   702        // Bresenham's Line Generation Algorithm implementation stolen from https://www.geeksforgeeks.org/bres
                         +enhams-line-generation-algorithm/
         Dodge.c   703        float dx;
         Dodge.c   704        float dy;
         Dodge.c   705        int decide;
         Dodge.c   706        int pk;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   36


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Dodge.c   707        int j;
         Dodge.c   708    
         Dodge.c   709        dx = abs(x2 - x1);
    0000079A 6173                   MOV         R7,R1
    0000079C D342                   MOV.L       L785+2,R3  ; __subs
    0000079E 2FD6                   MOV.L       R13,@-R15
    000007A0 2FC6                   MOV.L       R12,@-R15
    000007A2 2FB6                   MOV.L       R11,@-R15
    000007A4 2FA6                   MOV.L       R10,@-R15
    000007A6 2F96                   MOV.L       R9,@-R15
    000007A8 2F86                   MOV.L       R8,@-R15
    000007AA 4F22                   STS.L       PR,@-R15
    000007AC 7FE8                   ADD         #-24,R15
    000007AE 1F43                   MOV.L       R4,@(12,R15)
    000007B0 1F51                   MOV.L       R5,@(4,R15)
    000007B2 2F62                   MOV.L       R6,@R15
    000007B4 1F72                   MOV.L       R7,@(8,R15)
    000007B6 430B                   JSR         @R3
    000007B8 50F1                   MOV.L       @(4,R15),R0
    000007BA D23C                   MOV.L       L785+6,R2  ; __stoi
    000007BC 420B                   JSR         @R2
    000007BE 0009                   NOP
    000007C0 D33B                   MOV.L       L785+10,R3 ; _abs
    000007C2 430B                   JSR         @R3
    000007C4 6403                   MOV         R0,R4
    000007C6 D23B                   MOV.L       L785+14,R2 ; __itos
    000007C8 420B                   JSR         @R2
    000007CA 0009                   NOP
         Dodge.c   710        dy = abs(y2 - y1);
    000007CC 51FE                   MOV.L       @(56,R15),R1
    000007CE 6D03                   MOV         R0,R13
    000007D0 D335                   MOV.L       L785+2,R3  ; __subs
    000007D2 430B                   JSR         @R3
    000007D4 60F2                   MOV.L       @R15,R0
    000007D6 D235                   MOV.L       L785+6,R2  ; __stoi
    000007D8 420B                   JSR         @R2
    000007DA 0009                   NOP
    000007DC D334                   MOV.L       L785+10,R3 ; _abs
    000007DE 430B                   JSR         @R3
    000007E0 6403                   MOV         R0,R4
    000007E2 D234                   MOV.L       L785+14,R2 ; __itos
    000007E4 420B                   JSR         @R2
    000007E6 0009                   NOP
         Dodge.c   711    
         Dodge.c   712        decide = (dx > dy);
    000007E8 D333                   MOV.L       L785+18,R3 ; __gts
    000007EA 6403                   MOV         R0,R4
    000007EC 430B                   JSR         @R3
    000007EE 61D3                   MOV         R13,R1
         Dodge.c   713        
         Dodge.c   714        pk = 2 * dy - dx;
    000007F0 D233                   MOV.L       L785+26,R2 ; __muls
    000007F2 6903                   MOV         R0,R9
    000007F4 D031                   MOV.L       L785+22,R0 ; H'40000000
    000007F6 420B                   JSR         @R2
    000007F8 6143                   MOV         R4,R1
    000007FA 6A03                   MOV         R0,R10




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   37


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000007FC D32A                   MOV.L       L785+2,R3  ; __subs
    000007FE 6103                   MOV         R0,R1
    00000800 430B                   JSR         @R3
    00000802 60D3                   MOV         R13,R0
    00000804 D229                   MOV.L       L785+6,R2  ; __stoi
    00000806 420B                   JSR         @R2
    00000808 0009                   NOP
    0000080A 6E03                   MOV         R0,R14
    0000080C 53F3                   MOV.L       @(12,R15),R3
         Dodge.c   715        for (j = 0; j <= dx; j++) {
    0000080E E800                   MOV         #0,R8
    00000810 D22C                   MOV.L       L785+30,R2 ; _projectiles
    00000812 4308                   SHLL2       R3
    00000814 D029                   MOV.L       L785+22,R0 ; H'40000000
    00000816 4308                   SHLL2       R3
    00000818 4300                   SHLL        R3
    0000081A 1F35                   MOV.L       R3,@(20,R15)
    0000081C 332C                   ADD         R2,R3
    0000081E 1F33                   MOV.L       R3,@(12,R15)
    00000820 D227                   MOV.L       L785+26,R2 ; __muls
    00000822 420B                   JSR         @R2
    00000824 61D3                   MOV         R13,R1
    00000826 D220                   MOV.L       L785+2,R2  ; __subs
    00000828 420B                   JSR         @R2
    0000082A 61A3                   MOV         R10,R1
    0000082C 1F04                   MOV.L       R0,@(16,R15)
    0000082E 6183                   MOV         R8,R1
    00000830 D225                   MOV.L       L785+34,R2 ; __les
    00000832 420B                   JSR         @R2
    00000834 60D3                   MOV         R13,R0
    00000836 8800                   CMP/EQ      #0,R0
    00000838 8B01                   BF          L786
    0000083A A0A8                   BRA         L683
    0000083C 0009                   NOP
    0000083E              L786:                             
    0000083E DB23                   MOV.L       L785+38,R11; _false
    00000840 DC23                   MOV.L       L785+42,R12; _playerHealth
    00000842              L684:                             
         Dodge.c   716            // check for collision
         Dodge.c   717            if(IsCollidingWithPlayer((int)x1, (int)y1)) {
    00000842 D31A                   MOV.L       L785+6,R3  ; __stoi
    00000844 430B                   JSR         @R3
    00000846 60F2                   MOV.L       @R15,R0
    00000848 D318                   MOV.L       L785+6,R3  ; __stoi
    0000084A 6503                   MOV         R0,R5
    0000084C 430B                   JSR         @R3
    0000084E 50F1                   MOV.L       @(4,R15),R0
    00000850 BF5D                   BSR         _IsCollidingWithPlayer
    00000852 6403                   MOV         R0,R4
    00000854 2008                   TST         R0,R0
    00000856 8919                   BT          L685
         Dodge.c   718                // damage player
         Dodge.c   719                playerHealth -= 1;
    00000858 63C2                   MOV.L       @R12,R3
    0000085A 73FF                   ADD         #-1,R3
    0000085C 2C32                   MOV.L       R3,@R12
         Dodge.c   720                damaged = true;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   38


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000085E D11D                   MOV.L       L785+46,R1 ; _true
    00000860 D01D                   MOV.L       L785+50,R0 ; _damaged
    00000862 6210                   MOV.B       @R1,R2
    00000864 2020                   MOV.B       R2,@R0
         Dodge.c   721                flicker = false;
    00000866 63B0                   MOV.B       @R11,R3
    00000868 D21C                   MOV.L       L785+54,R2 ; _flicker
    0000086A 2230                   MOV.B       R3,@R2
         Dodge.c   722                flickerOffset = timer % 10;
    0000086C D31C                   MOV.L       L785+58,R3 ; _timer
    0000086E 6132                   MOV.L       @R3,R1
    00000870 D31C                   MOV.L       L785+62,R3 ; __modls
    00000872 430B                   JSR         @R3
    00000874 E00A                   MOV         #10,R0
    00000876 D21C                   MOV.L       L785+66,R2 ; _flickerOffset
         Dodge.c   723                SetTimer(ID_USER_TIMER4, 2000, NotDamaged); // animate flicker for 2 second
    00000878 D61C                   MOV.L       L785+70,R6 ; _NotDamaged
    0000087A 2202                   MOV.L       R0,@R2
    0000087C 9513                   MOV.W       L785,R5    ; H'07D0
    0000087E D31C                   MOV.L       L785+74,R3 ; _SetTimer
    00000880 430B                   JSR         @R3
    00000882 E404                   MOV         #4,R4
         Dodge.c   724                // destroy projectile
         Dodge.c   725                projectiles[arrayIndex].enabled = false;
    00000884 52F3                   MOV.L       @(12,R15),R2
    00000886 63B0                   MOV.B       @R11,R3
         Dodge.c   726                return;
    00000888 A088                   BRA         L686
    0000088A 2230                   MOV.B       R3,@R2
    0000088C              L685:                             
         Dodge.c   727            }
         Dodge.c   728            
         Dodge.c   729            // checking either to decrement or increment the
         Dodge.c   730            // value if we have to plot from (0,100) to (100,0)
         Dodge.c   731            x1 < x2 ? x1++ : x1--;
    0000088C 51F1                   MOV.L       @(4,R15),R1
    0000088E D219                   MOV.L       L785+78,R2 ; __lts
    00000890 420B                   JSR         @R2
    00000892 50F2                   MOV.L       @(8,R15),R0
    00000894 8800                   CMP/EQ      #0,R0
    00000896 8933                   BT          L687
    00000898 D117                   MOV.L       L785+82,R1 ; H'3F800000
    0000089A D318                   MOV.L       L785+86,R3 ; __adds
    0000089C 430B                   JSR         @R3
    0000089E 50F1                   MOV.L       @(4,R15),R0
    000008A0 1F01                   MOV.L       R0,@(4,R15)
    000008A2 A033                   BRA         L688
    000008A4 0009                   NOP
    000008A6              L785:                             
    000008A6 07D0                   .DATA.W     H'07D0
    000008A8 <00000000>             .DATA.L     __subs
    000008AC <00000000>             .DATA.L     __stoi
    000008B0 <00000000>             .DATA.L     _abs
    000008B4 <00000000>             .DATA.L     __itos
    000008B8 <00000000>             .DATA.L     __gts
    000008BC 40000000               .DATA.L     H'40000000
    000008C0 <00000000>             .DATA.L     __muls




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   39


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000008C4 <00000000>             .DATA.L     _projectiles
    000008C8 <00000000>             .DATA.L     __les
    000008CC <00000000>             .DATA.L     _false
    000008D0 <00000000>             .DATA.L     _playerHealth
    000008D4 <00000000>             .DATA.L     _true
    000008D8 <00000000>             .DATA.L     _damaged
    000008DC <00000000>             .DATA.L     _flicker
    000008E0 <00000000>             .DATA.L     _timer
    000008E4 <00000000>             .DATA.L     __modls
    000008E8 <00000000>             .DATA.L     _flickerOffset
    000008EC <00000000>             .DATA.L     _NotDamaged
    000008F0 <00000000>             .DATA.L     _SetTimer
    000008F4 <00000000>             .DATA.L     __lts
    000008F8 3F800000               .DATA.L     H'3F800000
    000008FC <00000000>             .DATA.L     __adds
    00000900              L687:                             
    00000900 51F1                   MOV.L       @(4,R15),R1
    00000902 D034                   MOV.L       L787+4,R0  ; H'3F800000
    00000904 D234                   MOV.L       L787+8,R2  ; __subs
    00000906 420B                   JSR         @R2
    00000908 0009                   NOP
    0000090A 1F01                   MOV.L       R0,@(4,R15)
    0000090C              L688:                             
    0000090C D333                   MOV.L       L787+12,R3 ; __itos
    0000090E 430B                   JSR         @R3
    00000910 60E3                   MOV         R14,R0
    00000912 4E11                   CMP/PZ      R14
    00000914 8D14                   BT/S        L689
    00000916 6403                   MOV         R0,R4
         Dodge.c   732            if (pk < 0) {
         Dodge.c   733                // decision value will decide to plot
         Dodge.c   734                // either  x1 or y1 in x's position
         Dodge.c   735                if (decide == 0) {
    00000918 2998                   TST         R9,R9
    0000091A 8B08                   BF          L690
         Dodge.c   736                    // putpixel(x1, y1, RED);
         Dodge.c   737                    pk = pk + 2 * dy;
    0000091C D230                   MOV.L       L787+16,R2 ; __adds
    0000091E 6143                   MOV         R4,R1
    00000920 420B                   JSR         @R2
    00000922 60A3                   MOV         R10,R0
    00000924 D32F                   MOV.L       L787+20,R3 ; __stoi
    00000926 430B                   JSR         @R3
    00000928 0009                   NOP
    0000092A A007                   BRA         L771
    0000092C 0009                   NOP
    0000092E              L690:                             
         Dodge.c   738                }
         Dodge.c   739                else {
         Dodge.c   740                    //(y1,x1) is passed in xt
         Dodge.c   741                    // putpixel(y1, x1, YELLOW);
         Dodge.c   742                    pk = pk + 2 * dy;
    0000092E 6143                   MOV         R4,R1
    00000930 D32B                   MOV.L       L787+16,R3 ; __adds
    00000932 430B                   JSR         @R3
    00000934 60A3                   MOV         R10,R0
    00000936 D22B                   MOV.L       L787+20,R2 ; __stoi




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   40


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000938 420B                   JSR         @R2
    0000093A 0009                   NOP
    0000093C              L771:                             
    0000093C A01C                   BRA         L692
    0000093E 6E03                   MOV         R0,R14
    00000940              L689:                             
         Dodge.c   743                }
         Dodge.c   744            }
         Dodge.c   745            else {
         Dodge.c   746                y1 < y2 ? y1++ : y1--;
    00000940 61F2                   MOV.L       @R15,R1
    00000942 D229                   MOV.L       L787+24,R2 ; __lts
    00000944 420B                   JSR         @R2
    00000946 50FE                   MOV.L       @(56,R15),R0
    00000948 8800                   CMP/EQ      #0,R0
    0000094A 8906                   BT          L693
    0000094C D121                   MOV.L       L787+4,R1  ; H'3F800000
    0000094E D324                   MOV.L       L787+16,R3 ; __adds
    00000950 430B                   JSR         @R3
    00000952 60F2                   MOV.L       @R15,R0
    00000954 2F02                   MOV.L       R0,@R15
    00000956 A006                   BRA         L694
    00000958 0009                   NOP
    0000095A              L693:                             
    0000095A 61F2                   MOV.L       @R15,R1
    0000095C D01D                   MOV.L       L787+4,R0  ; H'3F800000
    0000095E D21E                   MOV.L       L787+8,R2  ; __subs
    00000960 420B                   JSR         @R2
    00000962 0009                   NOP
    00000964 2F02                   MOV.L       R0,@R15
    00000966              L694:                             
         Dodge.c   747                if (decide == 0) {
    00000966 2998                   TST         R9,R9
         Dodge.c   748    
         Dodge.c   749                    // putpixel(x1, y1, RED);
         Dodge.c   750                }
         Dodge.c   751                else {
         Dodge.c   752                    //  putpixel(y1, x1, YELLOW);
         Dodge.c   753                }
         Dodge.c   754                pk = pk + 2 * dy - 2 * dx;
    00000968 D31D                   MOV.L       L787+16,R3 ; __adds
    0000096A 6143                   MOV         R4,R1
    0000096C 430B                   JSR         @R3
    0000096E 50F4                   MOV.L       @(16,R15),R0
    00000970 D21C                   MOV.L       L787+20,R2 ; __stoi
    00000972 420B                   JSR         @R2
    00000974 0009                   NOP
    00000976 6E03                   MOV         R0,R14
    00000978              L692:                             
    00000978 D318                   MOV.L       L787+12,R3 ; __itos
    0000097A 7801                   ADD         #1,R8
    0000097C 430B                   JSR         @R3
    0000097E 6083                   MOV         R8,R0
    00000980 D21A                   MOV.L       L787+28,R2 ; __ges
    00000982 420B                   JSR         @R2
    00000984 61D3                   MOV         R13,R1
    00000986 8800                   CMP/EQ      #0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   41


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000988 8901                   BT          L788
    0000098A AF5A                   BRA         L684
    0000098C 0009                   NOP
    0000098E              L788:                             
    0000098E              L683:                             
         Dodge.c   755            }
         Dodge.c   756        }
         Dodge.c   757    
         Dodge.c   758        projectiles[arrayIndex].x = x2;
    0000098E D318                   MOV.L       L787+32,R3 ; _projectiles
    00000990 54F5                   MOV.L       @(20,R15),R4
    00000992 343C                   ADD         R3,R4
    00000994 52F2                   MOV.L       @(8,R15),R2
    00000996 1421                   MOV.L       R2,@(4,R4)
         Dodge.c   759        projectiles[arrayIndex].y = y2;
    00000998 51FE                   MOV.L       @(56,R15),R1
    0000099A 1412                   MOV.L       R1,@(8,R4)
         Dodge.c   760    }
    0000099C              L686:                             
    0000099C 7F18                   ADD         #24,R15
    0000099E 4F26                   LDS.L       @R15+,PR
    000009A0 68F6                   MOV.L       @R15+,R8
    000009A2 69F6                   MOV.L       @R15+,R9
    000009A4 6AF6                   MOV.L       @R15+,R10
    000009A6 6BF6                   MOV.L       @R15+,R11
    000009A8 6CF6                   MOV.L       @R15+,R12
    000009AA 6DF6                   MOV.L       @R15+,R13
    000009AC 000B                   RTS
    000009AE 6EF6                   MOV.L       @R15+,R14
         Dodge.c   761    
         Dodge.c   762    void Physics()
    000009B0              _Physics:                        ; function: Physics
                                                           ; frame size=44
                                                           ; used runtime library name:
                                                           ; __adds, __subs, __muls, __itos, __gts, __lts
    000009B0 2FE6                   MOV.L       R14,@-R15
    000009B2 2FD6                   MOV.L       R13,@-R15
    000009B4 2FC6                   MOV.L       R12,@-R15
    000009B6 2FB6                   MOV.L       R11,@-R15
    000009B8 2FA6                   MOV.L       R10,@-R15
    000009BA 2F96                   MOV.L       R9,@-R15
    000009BC 2F86                   MOV.L       R8,@-R15
    000009BE 4F22                   STS.L       PR,@-R15
         Dodge.c   763    {
         Dodge.c   764        size_t i;
         Dodge.c   765        for (i = 0; i < 128; i++)
    000009C0 D80C                   MOV.L       L787+36,R8 ; _false
    000009C2 7FF8                   ADD         #-8,R15
    000009C4 9904                   MOV.W       L787,R9    ; H'0080
    000009C6 DA0C                   MOV.L       L787+40,R10; _playerX
    000009C8 DB0C                   MOV.L       L787+44,R11; _playerY
    000009CA DC09                   MOV.L       L787+32,R12; _projectiles
    000009CC A08D                   BRA         L697
    000009CE ED00                   MOV         #0,R13
    000009D0              L787:                             
    000009D0 0080                   .DATA.W     H'0080
    000009D2 0000                   .DATA.W     0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   42


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000009D4 3F800000               .DATA.L     H'3F800000
    000009D8 <00000000>             .DATA.L     __subs
    000009DC <00000000>             .DATA.L     __itos
    000009E0 <00000000>             .DATA.L     __adds
    000009E4 <00000000>             .DATA.L     __stoi
    000009E8 <00000000>             .DATA.L     __lts
    000009EC <00000000>             .DATA.L     __ges
    000009F0 <00000000>             .DATA.L     _projectiles
    000009F4 <00000000>             .DATA.L     _false
    000009F8 <00000000>             .DATA.L     _playerX
    000009FC <00000000>             .DATA.L     _playerY
    00000A00              L698:                             
    00000A00 6ED3                   MOV         R13,R14
    00000A02 4E08                   SHLL2       R14
    00000A04 4E08                   SHLL2       R14
    00000A06 4E00                   SHLL        R14
    00000A08 3ECC                   ADD         R12,R14
    00000A0A 63E0                   MOV.B       @R14,R3
    00000A0C 2338                   TST         R3,R3
    00000A0E 896B                   BT          L702
         Dodge.c   766        {
         Dodge.c   767            if(projectiles[i].enabled) {
         Dodge.c   768                // collision with edge of map
         Dodge.c   769                if(projectiles[i].x < 0 || projectiles[i].x > 128 || projectiles[i].y < 0 || projectiles[i].y 
                         +> 64) {
    00000A10 54E1                   MOV.L       @(4,R14),R4
    00000A12 6143                   MOV         R4,R1
    00000A14 D389                   MOV.L       L789+2,R3  ; __lts
    00000A16 430B                   JSR         @R3
    00000A18 E000                   MOV         #0,R0
    00000A1A 8800                   CMP/EQ      #0,R0
    00000A1C 8B11                   BF          L701
    00000A1E D088                   MOV.L       L789+6,R0  ; H'43000000
    00000A20 D288                   MOV.L       L789+10,R2 ; __gts
    00000A22 420B                   JSR         @R2
    00000A24 6143                   MOV         R4,R1
    00000A26 8800                   CMP/EQ      #0,R0
    00000A28 8B0B                   BF          L701
    00000A2A 51E2                   MOV.L       @(8,R14),R1
    00000A2C D383                   MOV.L       L789+2,R3  ; __lts
    00000A2E 430B                   JSR         @R3
    00000A30 E000                   MOV         #0,R0
    00000A32 8800                   CMP/EQ      #0,R0
    00000A34 8B05                   BF          L701
    00000A36 D084                   MOV.L       L789+14,R0 ; H'42800000
    00000A38 D282                   MOV.L       L789+10,R2 ; __gts
    00000A3A 420B                   JSR         @R2
    00000A3C 51E2                   MOV.L       @(8,R14),R1
    00000A3E 8800                   CMP/EQ      #0,R0
    00000A40 8902                   BT          L700
    00000A42              L701:                             
         Dodge.c   770                    // destroy projectile
         Dodge.c   771                    projectiles[i].enabled = false;
    00000A42 6380                   MOV.B       @R8,R3
         Dodge.c   772                    continue;
    00000A44 A050                   BRA         L702
    00000A46 2E30                   MOV.B       R3,@R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   43


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A48              L700:                             
         Dodge.c   773                }
         Dodge.c   774                // move + detect player collisions
         Dodge.c   775                MoveProjectile(i,
         Dodge.c   776                    projectiles[i].x,
         Dodge.c   777                    projectiles[i].y,
         Dodge.c   778                    projectiles[i].x + projectiles[i].xVelocity,
         Dodge.c   779                    projectiles[i].y + projectiles[i].yVelocity
         Dodge.c   780                );
    00000A48 51E2                   MOV.L       @(8,R14),R1
    00000A4A 2F12                   MOV.L       R1,@R15
    00000A4C D37F                   MOV.L       L789+18,R3 ; __adds
    00000A4E 430B                   JSR         @R3
    00000A50 50E4                   MOV.L       @(16,R14),R0
    00000A52 2F06                   MOV.L       R0,@-R15
    00000A54 51E1                   MOV.L       @(4,R14),R1
    00000A56 1F12                   MOV.L       R1,@(8,R15)
    00000A58 D37C                   MOV.L       L789+18,R3 ; __adds
    00000A5A 430B                   JSR         @R3
    00000A5C 50E3                   MOV.L       @(12,R14),R0
    00000A5E 6703                   MOV         R0,R7
    00000A60 56F1                   MOV.L       @(4,R15),R6
    00000A62 55F2                   MOV.L       @(8,R15),R5
    00000A64 BE98                   BSR         _MoveProjectile
    00000A66 64D3                   MOV         R13,R4
         Dodge.c   781                // update acceleration if this is a tracking projectile
         Dodge.c   782                if(projectiles[i].trackingForce > 0) { // maybe != 0 is better but I don't see why I'd have a 
                         +projectile go away from the player
    00000A68 D276                   MOV.L       L789+10,R2 ; __gts
    00000A6A 7F04                   ADD         #4,R15
    00000A6C 51E7                   MOV.L       @(28,R14),R1
    00000A6E 420B                   JSR         @R2
    00000A70 E000                   MOV         #0,R0
    00000A72 8800                   CMP/EQ      #0,R0
    00000A74 8929                   BT          L703
         Dodge.c   783                    float xDif = (float)playerX - projectiles[i].x;
    00000A76 D376                   MOV.L       L789+22,R3 ; __itos
    00000A78 430B                   JSR         @R3
    00000A7A 60A2                   MOV.L       @R10,R0
    00000A7C D375                   MOV.L       L789+26,R3 ; __subs
    00000A7E 64D3                   MOV         R13,R4
    00000A80 4408                   SHLL2       R4
    00000A82 4408                   SHLL2       R4
    00000A84 4400                   SHLL        R4
    00000A86 34CC                   ADD         R12,R4
    00000A88 6103                   MOV         R0,R1
    00000A8A 430B                   JSR         @R3
    00000A8C 5041                   MOV.L       @(4,R4),R0
    00000A8E 6503                   MOV         R0,R5
         Dodge.c   784                    float yDif = (float)playerY - projectiles[i].y;
    00000A90 D26F                   MOV.L       L789+22,R2 ; __itos
    00000A92 420B                   JSR         @R2
    00000A94 60B2                   MOV.L       @R11,R0
    00000A96 6103                   MOV         R0,R1
    00000A98 D36E                   MOV.L       L789+26,R3 ; __subs
    00000A9A 430B                   JSR         @R3
    00000A9C 5042                   MOV.L       @(8,R4),R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   44


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000A9E 6703                   MOV         R0,R7
         Dodge.c   785                    xDif = xDif * 0.01f * projectiles[i].trackingForce;
    00000AA0 5647                   MOV.L       @(28,R4),R6
    00000AA2 6153                   MOV         R5,R1
    00000AA4 D26C                   MOV.L       L789+30,R2 ; __muls
    00000AA6 420B                   JSR         @R2
    00000AA8 6063                   MOV         R6,R0
    00000AAA D16C                   MOV.L       L789+34,R1 ; H'3C23D70A
    00000AAC D36A                   MOV.L       L789+30,R3 ; __muls
    00000AAE 430B                   JSR         @R3
    00000AB0 0009                   NOP
    00000AB2 6503                   MOV         R0,R5
         Dodge.c   786                    yDif = yDif * 0.01f * projectiles[i].trackingForce;
    00000AB4 D268                   MOV.L       L789+30,R2 ; __muls
    00000AB6 6173                   MOV         R7,R1
    00000AB8 420B                   JSR         @R2
    00000ABA 6063                   MOV         R6,R0
    00000ABC D167                   MOV.L       L789+34,R1 ; H'3C23D70A
    00000ABE D366                   MOV.L       L789+30,R3 ; __muls
    00000AC0 430B                   JSR         @R3
    00000AC2 0009                   NOP
         Dodge.c   787                    projectiles[i].xAcceleration = xDif;
    00000AC4 1455                   MOV.L       R5,@(20,R4)
    00000AC6 6603                   MOV         R0,R6
         Dodge.c   788                    projectiles[i].yAcceleration = yDif;
    00000AC8 1466                   MOV.L       R6,@(24,R4)
    00000ACA              L703:                             
         Dodge.c   789                }
         Dodge.c   790                // update velocity
         Dodge.c   791                projectiles[i].xVelocity += projectiles[i].xAcceleration;
    00000ACA 64D3                   MOV         R13,R4
    00000ACC D35F                   MOV.L       L789+18,R3 ; __adds
    00000ACE 4408                   SHLL2       R4
    00000AD0 4408                   SHLL2       R4
    00000AD2 4400                   SHLL        R4
    00000AD4 34CC                   ADD         R12,R4
    00000AD6 5045                   MOV.L       @(20,R4),R0
    00000AD8 430B                   JSR         @R3
    00000ADA 5143                   MOV.L       @(12,R4),R1
    00000ADC 1403                   MOV.L       R0,@(12,R4)
         Dodge.c   792                projectiles[i].yVelocity += projectiles[i].yAcceleration;
    00000ADE 5046                   MOV.L       @(24,R4),R0
    00000AE0 D25A                   MOV.L       L789+18,R2 ; __adds
    00000AE2 420B                   JSR         @R2
    00000AE4 5144                   MOV.L       @(16,R4),R1
    00000AE6 1404                   MOV.L       R0,@(16,R4)
    00000AE8              L702:                             
    00000AE8 7D01                   ADD         #1,R13
    00000AEA              L697:                             
    00000AEA 3D92                   CMP/HS      R9,R13
    00000AEC 8B88                   BF          L698
         Dodge.c   793            }
         Dodge.c   794        }
         Dodge.c   795    
         Dodge.c   796        // stop player from leaving map
         Dodge.c   797            if(playerX < 1)
    00000AEE E401                   MOV         #1,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   45


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000AF0 62A2                   MOV.L       @R10,R2
    00000AF2 3243                   CMP/GE      R4,R2
    00000AF4 8900                   BT          L704
         Dodge.c   798                playerX = 1;
    00000AF6 2A42                   MOV.L       R4,@R10
    00000AF8              L704:                             
         Dodge.c   799            if(playerX > 127)
    00000AF8 62A2                   MOV.L       @R10,R2
    00000AFA E47F                   MOV         #127,R4
    00000AFC 3247                   CMP/GT      R4,R2
    00000AFE 8B00                   BF          L705
         Dodge.c   800                playerX = 127;
    00000B00 2A42                   MOV.L       R4,@R10
    00000B02              L705:                             
         Dodge.c   801            if(playerY < 2)
    00000B02 E402                   MOV         #2,R4
    00000B04 62B2                   MOV.L       @R11,R2
    00000B06 3243                   CMP/GE      R4,R2
    00000B08 8900                   BT          L706
         Dodge.c   802                playerY = 2;
    00000B0A 2B42                   MOV.L       R4,@R11
    00000B0C              L706:                             
         Dodge.c   803            if(playerY > 62)
    00000B0C 62B2                   MOV.L       @R11,R2
    00000B0E E43E                   MOV         #62,R4
    00000B10 3247                   CMP/GT      R4,R2
    00000B12 8B00                   BF          L707
         Dodge.c   804                playerY = 62;
    00000B14 2B42                   MOV.L       R4,@R11
    00000B16              L707:                             
         Dodge.c   805    }
    00000B16 7F08                   ADD         #8,R15
    00000B18 4F26                   LDS.L       @R15+,PR
    00000B1A 68F6                   MOV.L       @R15+,R8
    00000B1C 69F6                   MOV.L       @R15+,R9
    00000B1E 6AF6                   MOV.L       @R15+,R10
    00000B20 6BF6                   MOV.L       @R15+,R11
    00000B22 6CF6                   MOV.L       @R15+,R12
    00000B24 6DF6                   MOV.L       @R15+,R13
    00000B26 000B                   RTS
    00000B28 6EF6                   MOV.L       @R15+,R14
         Dodge.c   806    
         Dodge.c   807    void Controls()
    00000B2A              _Controls:                       ; function: Controls
                                                           ; frame size=8
    00000B2A 2FE6                   MOV.L       R14,@-R15
    00000B2C 4F22                   STS.L       PR,@-R15
         Dodge.c   808    {
         Dodge.c   809        if(!quit) {
    00000B2E D24C                   MOV.L       L789+38,R2 ; _quit
    00000B30 6320                   MOV.B       @R2,R3
    00000B32 2338                   TST         R3,R3
    00000B34 8B23                   BF          L708
         Dodge.c   810            if(IsKeyDown(KEY_CTRL_LEFT)) {
    00000B36 DE4B                   MOV.L       L789+42,R14; _playerX
    00000B38 BB00                   BSR         _KeyDown
    00000B3A E426                   MOV         #38,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   46


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000B3C 600C                   EXTU.B      R0,R0
    00000B3E 2008                   TST         R0,R0
    00000B40 8D03                   BT/S        L709
         Dodge.c   811                playerX--;
         Dodge.c   812            }
         Dodge.c   813            if(IsKeyDown(KEY_CTRL_RIGHT)) {
    00000B42 E41B                   MOV         #27,R4
    00000B44 63E2                   MOV.L       @R14,R3
    00000B46 73FF                   ADD         #-1,R3
    00000B48 2E32                   MOV.L       R3,@R14
    00000B4A              L709:                             
    00000B4A BAF7                   BSR         _KeyDown
    00000B4C 0009                   NOP
    00000B4E 600C                   EXTU.B      R0,R0
    00000B50 2008                   TST         R0,R0
    00000B52 8902                   BT          L710
         Dodge.c   814                playerX++;
    00000B54 62E2                   MOV.L       @R14,R2
    00000B56 7201                   ADD         #1,R2
    00000B58 2E22                   MOV.L       R2,@R14
    00000B5A              L710:                             
         Dodge.c   815            }
         Dodge.c   816            if(IsKeyDown(KEY_CTRL_UP)) {
    00000B5A DE43                   MOV.L       L789+46,R14; _playerY
    00000B5C BAEE                   BSR         _KeyDown
    00000B5E E41C                   MOV         #28,R4
    00000B60 600C                   EXTU.B      R0,R0
    00000B62 2008                   TST         R0,R0
    00000B64 8D03                   BT/S        L711
         Dodge.c   817                playerY--;
         Dodge.c   818            }
         Dodge.c   819            if(IsKeyDown(KEY_CTRL_DOWN)) {
    00000B66 E425                   MOV         #37,R4
    00000B68 63E2                   MOV.L       @R14,R3
    00000B6A 73FF                   ADD         #-1,R3
    00000B6C 2E32                   MOV.L       R3,@R14
    00000B6E              L711:                             
    00000B6E BAE5                   BSR         _KeyDown
    00000B70 0009                   NOP
    00000B72 600C                   EXTU.B      R0,R0
    00000B74 2008                   TST         R0,R0
    00000B76 8902                   BT          L708
         Dodge.c   820                playerY++;
    00000B78 62E2                   MOV.L       @R14,R2
    00000B7A 7201                   ADD         #1,R2
    00000B7C 2E22                   MOV.L       R2,@R14
    00000B7E              L708:                             
         Dodge.c   821            }
         Dodge.c   822        }
         Dodge.c   823        
         Dodge.c   824    }
    00000B7E 4F26                   LDS.L       @R15+,PR
    00000B80 000B                   RTS
    00000B82 6EF6                   MOV.L       @R15+,R14
         Dodge.c   825    
         Dodge.c   826    int randomInt(int max) {
    00000B84              _randomInt:                      ; function: randomInt




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   47


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

                                                           ; frame size=44
                                                           ; used runtime library name:
                                                           ; __muld, __divdr, __dtoi, __itod
    00000B84 4F22                   STS.L       PR,@-R15
    00000B86 7FF4                   ADD         #-12,R15
         Dodge.c   827        double normalized = (double)rand() / (double)RAND_MAX;
    00000B88 D338                   MOV.L       L789+50,R3 ; _rand
    00000B8A 430B                   JSR         @R3
    00000B8C 2F42                   MOV.L       R4,@R15
    00000B8E 7FF8                   ADD         #-8,R15
    00000B90 D237                   MOV.L       L789+54,R2 ; __itod
    00000B92 420B                   JSR         @R2
    00000B94 2FF6                   MOV.L       R15,@-R15
    00000B96 E300                   MOV         #0,R3
    00000B98 D237                   MOV.L       L789+62,R2 ; __divdr
    00000B9A 2F36                   MOV.L       R3,@-R15
    00000B9C D335                   MOV.L       L789+58,R3 ; H'40DFFFC0
    00000B9E 2F36                   MOV.L       R3,@-R15
    00000BA0 61F3                   MOV         R15,R1
    00000BA2 7114                   ADD         #20,R1
    00000BA4 420B                   JSR         @R2
    00000BA6 2F16                   MOV.L       R1,@-R15
         Dodge.c   828        return (int)(normalized * (double)max);
    00000BA8 D331                   MOV.L       L789+54,R3 ; __itod
    00000BAA 7FF8                   ADD         #-8,R15
    00000BAC 50F2                   MOV.L       @(8,R15),R0
    00000BAE 7FF8                   ADD         #-8,R15
    00000BB0 430B                   JSR         @R3
    00000BB2 2FF6                   MOV.L       R15,@-R15
    00000BB4 52F6                   MOV.L       @(24,R15),R2
    00000BB6 2F26                   MOV.L       R2,@-R15
    00000BB8 52F6                   MOV.L       @(24,R15),R2
    00000BBA 2F26                   MOV.L       R2,@-R15
    00000BBC D12F                   MOV.L       L789+66,R1 ; __muld
    00000BBE 63F3                   MOV         R15,R3
    00000BC0 7310                   ADD         #16,R3
    00000BC2 410B                   JSR         @R1
    00000BC4 2F36                   MOV.L       R3,@-R15
    00000BC6 D22E                   MOV.L       L789+70,R2 ; __dtoi
    00000BC8 420B                   JSR         @R2
    00000BCA 0009                   NOP
         Dodge.c   829    }
    00000BCC 7F0C                   ADD         #12,R15
    00000BCE 4F26                   LDS.L       @R15+,PR
    00000BD0 000B                   RTS
    00000BD2 0009                   NOP
         Dodge.c   830    
         Dodge.c   831    #pragma region attacks
         Dodge.c   832    
         Dodge.c   833    // next projectile in this attack
         Dodge.c   834    void SpawnNext() {
    00000BD4              _SpawnNext:                      ; function: SpawnNext
                                                           ; frame size=60
                                                           ; used runtime library name:
                                                           ; __modls, __adds, __subs, __muls, __negs, __itos
    00000BD4 2FE6                   MOV.L       R14,@-R15
    00000BD6 E505                   MOV         #5,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   48


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000BD8 2FD6                   MOV.L       R13,@-R15
    00000BDA E40A                   MOV         #10,R4
    00000BDC 2FC6                   MOV.L       R12,@-R15
    00000BDE EE10                   MOV         #16,R14
    00000BE0 2FB6                   MOV.L       R11,@-R15
    00000BE2 6C53                   MOV         R5,R12
    00000BE4 2FA6                   MOV.L       R10,@-R15
    00000BE6 EB00                   MOV         #0,R11
    00000BE8 2F96                   MOV.L       R9,@-R15
    00000BEA 7C7B                   ADD         #123,R12
    00000BEC DA26                   MOV.L       L789+78,R10; _currentAttack
    00000BEE 2F86                   MOV.L       R8,@-R15
    00000BF0 4F22                   STS.L       PR,@-R15
    00000BF2 7FFC                   ADD         #-4,R15
    00000BF4 D823                   MOV.L       L789+74,R8 ; _projectileIndex
    00000BF6 D91B                   MOV.L       L789+42,R9 ; _playerX
    00000BF8 60A2                   MOV.L       @R10,R0
    00000BFA 8800                   CMP/EQ      #0,R0
    00000BFC 8D18                   BT/S        L601
    00000BFE 6D82                   MOV.L       @R8,R13
    00000C00 8801                   CMP/EQ      #1,R0
    00000C02 8954                   BT          L602
    00000C04 8802                   CMP/EQ      #2,R0
    00000C06 8B01                   BF          L790
    00000C08 A085                   BRA         L603
    00000C0A 0009                   NOP
    00000C0C              L790:                             
    00000C0C 8803                   CMP/EQ      #3,R0
    00000C0E 8B01                   BF          L791
    00000C10 A0BB                   BRA         L604
    00000C12 0009                   NOP
    00000C14              L791:                             
    00000C14 8804                   CMP/EQ      #4,R0
    00000C16 8B01                   BF          L792
    00000C18 A0EE                   BRA         L605
    00000C1A 0009                   NOP
    00000C1C              L792:                             
    00000C1C 8805                   CMP/EQ      #5,R0
    00000C1E 8B01                   BF          L793
    00000C20 A108                   BRA         L606
    00000C22 0009                   NOP
    00000C24              L793:                             
    00000C24 8806                   CMP/EQ      #6,R0
    00000C26 8B01                   BF          L794
    00000C28 A13C                   BRA         L607
    00000C2A 0009                   NOP
    00000C2C              L794:                             
    00000C2C A18E                   BRA         L608
    00000C2E 0009                   NOP
    00000C30              L601:                            ; case label 
         Dodge.c   835        // I HATE THE FACT THAT YOU HAVE TO DECLARE VARIABLES AT THE START OF THE FUNCTION IN C
         Dodge.c   836        #pragma region a whole bunch of variable declarations
         Dodge.c   837        int mod;
         Dodge.c   838        int mod2;
         Dodge.c   839        int xPos;
         Dodge.c   840        int yPos;
         Dodge.c   841        int direction;




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   49


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Dodge.c   842        float directionX;
         Dodge.c   843        float directionY;
         Dodge.c   844        int i;
         Dodge.c   845        int j;
         Dodge.c   846        int xToCenter;
         Dodge.c   847        int yToCenter;
         Dodge.c   848        int radius;
         Dodge.c   849        #pragma endregion
         Dodge.c   850        switch (currentAttack)
         Dodge.c   851        {
         Dodge.c   852            case 0: // horizontally from either side, accelerating
         Dodge.c   853                mod = projectileIndex % 2;
    00000C30 60D3                   MOV         R13,R0
    00000C32 4011                   CMP/PZ      R0
    00000C34 8B2A                   BF          L715
    00000C36 A02E                   BRA         L716
    00000C38 C901                   AND         #1,R0
    00000C3A              L789:                             
    00000C3A 0000                   .DATA.W     0
    00000C3C <00000000>             .DATA.L     __lts
    00000C40 43000000               .DATA.L     H'43000000
    00000C44 <00000000>             .DATA.L     __gts
    00000C48 42800000               .DATA.L     H'42800000
    00000C4C <00000000>             .DATA.L     __adds
    00000C50 <00000000>             .DATA.L     __itos
    00000C54 <00000000>             .DATA.L     __subs
    00000C58 <00000000>             .DATA.L     __muls
    00000C5C 3C23D70A               .DATA.L     H'3C23D70A
    00000C60 <00000000>             .DATA.L     _quit
    00000C64 <00000000>             .DATA.L     _playerX
    00000C68 <00000000>             .DATA.L     _playerY
    00000C6C <00000000>             .DATA.L     _rand
    00000C70 <00000000>             .DATA.L     __itod
    00000C74 40DFFFC0               .DATA.L     H'40DFFFC0
    00000C78 <00000000>             .DATA.L     __divdr
    00000C7C <00000000>             .DATA.L     __muld
    00000C80 <00000000>             .DATA.L     __dtoi
    00000C84 <00000000>             .DATA.L     _projectileIndex
    00000C88 <00000000>             .DATA.L     _currentAttack
    00000C8C              L715:                             
    00000C8C 6007                   NOT         R0,R0
    00000C8E 7001                   ADD         #1,R0
    00000C90 C901                   AND         #1,R0
    00000C92 6007                   NOT         R0,R0
    00000C94 7001                   ADD         #1,R0
    00000C96              L716:                             
    00000C96 6403                   MOV         R0,R4
         Dodge.c   854                xPos = mod == 0 ? 1 : 128 - 1;
    00000C98 2448                   TST         R4,R4
    00000C9A 8B01                   BF          L717
    00000C9C A001                   BRA         L718
    00000C9E EC01                   MOV         #1,R12
    00000CA0              L717:                             
    00000CA0 EC7F                   MOV         #127,R12
    00000CA2              L718:                             
         Dodge.c   855                direction = mod == 0 ? 1 : -1;
    00000CA2 2448                   TST         R4,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   50


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000CA4 8B01                   BF          L795
    00000CA6 A163                   BRA         L772
    00000CA8 0009                   NOP
    00000CAA              L795:                             
    00000CAA A164                   BRA         L597
    00000CAC EEFF                   MOV         #-1,R14
    00000CAE              L602:                            ; case label 
         Dodge.c   856                SpawnProjectile(xPos, (projectileIndex + 1) * 4, 0, 0, direction * 0.1f, 0, 0);
         Dodge.c   857                break;
         Dodge.c   858            case 1: // circle, constant speed
         Dodge.c   859                directionX = (((projectileIndex + 8) % 16) - 8);
    00000CAE 60D3                   MOV         R13,R0
    00000CB0 7008                   ADD         #8,R0
    00000CB2 4011                   CMP/PZ      R0
    00000CB4 8B01                   BF          L721
    00000CB6 A005                   BRA         L722
    00000CB8 C90F                   AND         #15,R0
    00000CBA              L721:                             
    00000CBA 6007                   NOT         R0,R0
    00000CBC 7001                   ADD         #1,R0
    00000CBE C90F                   AND         #15,R0
    00000CC0 6007                   NOT         R0,R0
    00000CC2 7001                   ADD         #1,R0
    00000CC4              L722:                             
    00000CC4 D27C                   MOV.L       L796+2,R2  ; __itos
    00000CC6 420B                   JSR         @R2
    00000CC8 70F8                   ADD         #-8,R0
    00000CCA 6C03                   MOV         R0,R12
         Dodge.c   860                directionY = ((projectileIndex % 16) - 8);
    00000CCC 60D3                   MOV         R13,R0
    00000CCE 4011                   CMP/PZ      R0
    00000CD0 8B01                   BF          L723
    00000CD2 A005                   BRA         L724
    00000CD4 C90F                   AND         #15,R0
    00000CD6              L723:                             
    00000CD6 6007                   NOT         R0,R0
    00000CD8 7001                   ADD         #1,R0
    00000CDA C90F                   AND         #15,R0
    00000CDC 6007                   NOT         R0,R0
    00000CDE 7001                   ADD         #1,R0
    00000CE0              L724:                             
    00000CE0 D275                   MOV.L       L796+2,R2  ; __itos
    00000CE2 420B                   JSR         @R2
    00000CE4 70F8                   ADD         #-8,R0
    00000CE6 6E03                   MOV         R0,R14
         Dodge.c   861                SpawnProjectile(64, 32, directionX, directionY, 0, 0, 0);
    00000CE8 D574                   MOV.L       L796+6,R5  ; H'42000000
    00000CEA E300                   MOV         #0,R3
    00000CEC D474                   MOV.L       L796+10,R4 ; H'42800000
    00000CEE 67E3                   MOV         R14,R7
    00000CF0 2F36                   MOV.L       R3,@-R15
    00000CF2 2F36                   MOV.L       R3,@-R15
    00000CF4 2F36                   MOV.L       R3,@-R15
    00000CF6 BCE3                   BSR         _SpawnProjectile
    00000CF8 66C3                   MOV         R12,R6
         Dodge.c   862                SpawnProjectile(64, 32, -directionX, directionY, 0, 0, 0);
    00000CFA E300                   MOV         #0,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   51


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000CFC D271                   MOV.L       L796+14,R2 ; __negs
    00000CFE 67E3                   MOV         R14,R7
    00000D00 2F36                   MOV.L       R3,@-R15
    00000D02 2F36                   MOV.L       R3,@-R15
    00000D04 2F36                   MOV.L       R3,@-R15
    00000D06 420B                   JSR         @R2
    00000D08 60C3                   MOV         R12,R0
    00000D0A D56C                   MOV.L       L796+6,R5  ; H'42000000
    00000D0C D46C                   MOV.L       L796+10,R4 ; H'42800000
    00000D0E BCD7                   BSR         _SpawnProjectile
    00000D10 6603                   MOV         R0,R6
         Dodge.c   863                break;
    00000D12 A149                   BRA         L714
    00000D14 7F18                   ADD         #24,R15
    00000D16              L603:                            ; case label 
         Dodge.c   864            case 2: // vertically from either side, constant speed
         Dodge.c   865                if(projectileIndex % 5 == 0) {
    00000D16 61D3                   MOV         R13,R1
    00000D18 D26B                   MOV.L       L796+18,R2 ; __modls
    00000D1A 420B                   JSR         @R2
    00000D1C 6053                   MOV         R5,R0
    00000D1E 2008                   TST         R0,R0
    00000D20 8901                   BT          L797
    00000D22 A141                   BRA         L714
    00000D24 0009                   NOP
    00000D26              L797:                             
         Dodge.c   866                    if(projectileIndex % 10 == 0) {
    00000D26 61D3                   MOV         R13,R1
    00000D28 D367                   MOV.L       L796+18,R3 ; __modls
    00000D2A 430B                   JSR         @R3
    00000D2C 6043                   MOV         R4,R0
    00000D2E 2008                   TST         R0,R0
    00000D30 8B15                   BF          L726
         Dodge.c   867                        for (i = 0; i < 16; i++)
    00000D32 6CB3                   MOV         R11,R12
    00000D34 A00F                   BRA         L727
    00000D36 6DB3                   MOV         R11,R13
    00000D38              L728:                             
         Dodge.c   868                        {
         Dodge.c   869                            SpawnProjectile(i * 8, 0, 0, 2, 0, 0, 0);
    00000D38 D764                   MOV.L       L796+22,R7 ; H'40000000
    00000D3A E200                   MOV         #0,R2
    00000D3C D35E                   MOV.L       L796+2,R3  ; __itos
    00000D3E 6623                   MOV         R2,R6
    00000D40 2F26                   MOV.L       R2,@-R15
    00000D42 6523                   MOV         R2,R5
    00000D44 2F26                   MOV.L       R2,@-R15
    00000D46 2F26                   MOV.L       R2,@-R15
    00000D48 430B                   JSR         @R3
    00000D4A 60D3                   MOV         R13,R0
    00000D4C BCB8                   BSR         _SpawnProjectile
    00000D4E 6403                   MOV         R0,R4
    00000D50 7F0C                   ADD         #12,R15
    00000D52 7C01                   ADD         #1,R12
    00000D54 7D08                   ADD         #8,R13
    00000D56              L727:                             
    00000D56 3CE3                   CMP/GE      R14,R12




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   52


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D58 8BEE                   BF          L728
    00000D5A A125                   BRA         L714
    00000D5C 0009                   NOP
    00000D5E              L726:                             
         Dodge.c   870                        }
         Dodge.c   871                    }
         Dodge.c   872                    else {
         Dodge.c   873                        for (i = 0; i < 16; i++)
    00000D5E 6CB3                   MOV         R11,R12
    00000D60 A00F                   BRA         L730
    00000D62 ED04                   MOV         #4,R13
    00000D64              L731:                             
         Dodge.c   874                        {
         Dodge.c   875                            SpawnProjectile(i * 8 + 4, 64, 0, -2, 0, 0, 0);
    00000D64 D75A                   MOV.L       L796+26,R7 ; H'C0000000
    00000D66 E200                   MOV         #0,R2
    00000D68 D555                   MOV.L       L796+10,R5 ; H'42800000
    00000D6A 6623                   MOV         R2,R6
    00000D6C D352                   MOV.L       L796+2,R3  ; __itos
    00000D6E 2F26                   MOV.L       R2,@-R15
    00000D70 2F26                   MOV.L       R2,@-R15
    00000D72 2F26                   MOV.L       R2,@-R15
    00000D74 430B                   JSR         @R3
    00000D76 60D3                   MOV         R13,R0
    00000D78 BCA2                   BSR         _SpawnProjectile
    00000D7A 6403                   MOV         R0,R4
    00000D7C 7F0C                   ADD         #12,R15
    00000D7E 7C01                   ADD         #1,R12
    00000D80 7D08                   ADD         #8,R13
    00000D82              L730:                             
    00000D82 3CE3                   CMP/GE      R14,R12
    00000D84 8BEE                   BF          L731
         Dodge.c   876                        }
         Dodge.c   877                    }
         Dodge.c   878                    
         Dodge.c   879                }
         Dodge.c   880                break;
    00000D86 A10F                   BRA         L714
    00000D88 0009                   NOP
    00000D8A              L604:                            ; case label 
         Dodge.c   881            case 3: // random directions, accelerate back to center
         Dodge.c   882                for (i = 0; i < 24; i++)
    00000D8A A031                   BRA         L732
    00000D8C E918                   MOV         #24,R9
    00000D8E              L733:                             
         Dodge.c   883                {
         Dodge.c   884                    xPos = randomInt(128);
    00000D8E BEF9                   BSR         _randomInt
    00000D90 64C3                   MOV         R12,R4
    00000D92 6E03                   MOV         R0,R14
         Dodge.c   885                    yPos = randomInt(64);
    00000D94 BEF6                   BSR         _randomInt
    00000D96 E440                   MOV         #64,R4
         Dodge.c   886                    directionX = (xPos - 64) * 0.01f  * 8;
    00000D98 D347                   MOV.L       L796+2,R3  ; __itos
    00000D9A 6403                   MOV         R0,R4
    00000D9C 60E3                   MOV         R14,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   53


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000D9E 430B                   JSR         @R3
    00000DA0 70C0                   ADD         #-64,R0
    00000DA2 D14C                   MOV.L       L796+30,R1 ; H'3DA3D70A
    00000DA4 D24C                   MOV.L       L796+34,R2 ; __muls
    00000DA6 420B                   JSR         @R2
    00000DA8 0009                   NOP
    00000DAA 6E03                   MOV         R0,R14
         Dodge.c   887                    directionY = (yPos - 32) * 0.02f * 8;
    00000DAC D342                   MOV.L       L796+2,R3  ; __itos
    00000DAE 6043                   MOV         R4,R0
    00000DB0 430B                   JSR         @R3
    00000DB2 70E0                   ADD         #-32,R0
    00000DB4 D149                   MOV.L       L796+38,R1 ; H'3E23D70A
    00000DB6 D248                   MOV.L       L796+34,R2 ; __muls
    00000DB8 420B                   JSR         @R2
    00000DBA 0009                   NOP
         Dodge.c   888                    SpawnProjectile(64, 32, directionX, directionY, -directionX * 0.04f, -directionY * 0.04f, 
                         +0);
    00000DBC D246                   MOV.L       L796+34,R2 ; __muls
    00000DBE 6D03                   MOV         R0,R13
    00000DC0 D047                   MOV.L       L796+42,R0 ; H'3D23D70A
    00000DC2 E300                   MOV         #0,R3
    00000DC4 2F36                   MOV.L       R3,@-R15
    00000DC6 420B                   JSR         @R2
    00000DC8 61D3                   MOV         R13,R1
    00000DCA D23E                   MOV.L       L796+14,R2 ; __negs
    00000DCC 420B                   JSR         @R2
    00000DCE 0009                   NOP
    00000DD0 2F06                   MOV.L       R0,@-R15
    00000DD2 D043                   MOV.L       L796+42,R0 ; H'3D23D70A
    00000DD4 D240                   MOV.L       L796+34,R2 ; __muls
    00000DD6 420B                   JSR         @R2
    00000DD8 61E3                   MOV         R14,R1
    00000DDA D23A                   MOV.L       L796+14,R2 ; __negs
    00000DDC 420B                   JSR         @R2
    00000DDE 0009                   NOP
    00000DE0 2F06                   MOV.L       R0,@-R15
    00000DE2 67D3                   MOV         R13,R7
    00000DE4 D535                   MOV.L       L796+6,R5  ; H'42000000
    00000DE6 D436                   MOV.L       L796+10,R4 ; H'42800000
    00000DE8 BC6A                   BSR         _SpawnProjectile
    00000DEA 66E3                   MOV         R14,R6
    00000DEC 7F0C                   ADD         #12,R15
    00000DEE 79FF                   ADD         #-1,R9
    00000DF0              L732:                             
    00000DF0 2998                   TST         R9,R9
    00000DF2 8BCC                   BF          L733
         Dodge.c   889                }
         Dodge.c   890                
         Dodge.c   891                break;
    00000DF4 A0D8                   BRA         L714
    00000DF6 0009                   NOP
    00000DF8              L605:                            ; case label 
         Dodge.c   892            case 4: // spawn a bunch of tracking projectiles around the screen
         Dodge.c   893                for (i = 0; i < 8; i++)
    00000DF8 A018                   BRA         L734
    00000DFA EE08                   MOV         #8,R14




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   54


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000DFC              L735:                             
         Dodge.c   894                {
         Dodge.c   895                    xPos = randomInt(128);
    00000DFC BEC2                   BSR         _randomInt
    00000DFE 64C3                   MOV         R12,R4
    00000E00 6D03                   MOV         R0,R13
         Dodge.c   896                    yPos = randomInt(64);
    00000E02 BEBF                   BSR         _randomInt
    00000E04 E440                   MOV         #64,R4
    00000E06 6903                   MOV         R0,R9
         Dodge.c   897                    SpawnProjectile(xPos, yPos, 0, 0, 0, 0, 0.3);
    00000E08 D236                   MOV.L       L796+46,R2 ; H'3E99999A
    00000E0A E300                   MOV         #0,R3
    00000E0C D12A                   MOV.L       L796+2,R1  ; __itos
    00000E0E 6733                   MOV         R3,R7
    00000E10 2F26                   MOV.L       R2,@-R15
    00000E12 6633                   MOV         R3,R6
    00000E14 2F36                   MOV.L       R3,@-R15
    00000E16 2F36                   MOV.L       R3,@-R15
    00000E18 410B                   JSR         @R1
    00000E1A 6093                   MOV         R9,R0
    00000E1C D126                   MOV.L       L796+2,R1  ; __itos
    00000E1E 6503                   MOV         R0,R5
    00000E20 410B                   JSR         @R1
    00000E22 60D3                   MOV         R13,R0
    00000E24 BC4C                   BSR         _SpawnProjectile
    00000E26 6403                   MOV         R0,R4
    00000E28 7F0C                   ADD         #12,R15
    00000E2A 7EFF                   ADD         #-1,R14
    00000E2C              L734:                             
    00000E2C 2EE8                   TST         R14,R14
    00000E2E 8BE5                   BF          L735
         Dodge.c   898                }
         Dodge.c   899                
         Dodge.c   900                break;
    00000E30 A0BA                   BRA         L714
    00000E32 0009                   NOP
    00000E34              L606:                            ; case label 
         Dodge.c   901            case 5: // continuously spawn projectiles with an initial direction towards the player
         Dodge.c   902                if(projectileIndex % 5 == 0)
    00000E34 D324                   MOV.L       L796+18,R3 ; __modls
    00000E36 61D3                   MOV         R13,R1
    00000E38 430B                   JSR         @R3
    00000E3A 6053                   MOV         R5,R0
    00000E3C 2008                   TST         R0,R0
    00000E3E 8901                   BT          L798
    00000E40 A0B2                   BRA         L714
    00000E42 0009                   NOP
    00000E44              L798:                             
         Dodge.c   903                {
         Dodge.c   904                    xPos = randomInt(128);
    00000E44 BE9E                   BSR         _randomInt
    00000E46 64C3                   MOV         R12,R4
    00000E48 2F02                   MOV.L       R0,@R15
         Dodge.c   905                    yPos = randomInt(64);
    00000E4A BE9B                   BSR         _randomInt
    00000E4C E440                   MOV         #64,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   55


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000E4E 6603                   MOV         R0,R6
         Dodge.c   906                    directionX = ((float)playerX - xPos) * 0.01f;
    00000E50 D219                   MOV.L       L796+2,R2  ; __itos
    00000E52 420B                   JSR         @R2
    00000E54 6092                   MOV.L       @R9,R0
    00000E56 6203                   MOV         R0,R2
    00000E58 D317                   MOV.L       L796+2,R3  ; __itos
    00000E5A 430B                   JSR         @R3
    00000E5C 60F2                   MOV.L       @R15,R0
    00000E5E 6403                   MOV         R0,R4
    00000E60 D321                   MOV.L       L796+50,R3 ; __subs
    00000E62 430B                   JSR         @R3
    00000E64 6123                   MOV         R2,R1
    00000E66 D121                   MOV.L       L796+54,R1 ; H'3C23D70A
    00000E68 D21B                   MOV.L       L796+34,R2 ; __muls
    00000E6A 420B                   JSR         @R2
    00000E6C 0009                   NOP
    00000E6E 6703                   MOV         R0,R7
         Dodge.c   907                    directionY = ((float)playerY - yPos) * 0.01f;
    00000E70 D21F                   MOV.L       L796+58,R2 ; _playerY
    00000E72 D311                   MOV.L       L796+2,R3  ; __itos
    00000E74 430B                   JSR         @R3
    00000E76 6022                   MOV.L       @R2,R0
    00000E78 D10F                   MOV.L       L796+2,R1  ; __itos
    00000E7A 6303                   MOV         R0,R3
    00000E7C 410B                   JSR         @R1
    00000E7E 6063                   MOV         R6,R0
    00000E80 6133                   MOV         R3,R1
    00000E82 D319                   MOV.L       L796+50,R3 ; __subs
    00000E84 430B                   JSR         @R3
    00000E86 6503                   MOV         R0,R5
    00000E88 D118                   MOV.L       L796+54,R1 ; H'3C23D70A
    00000E8A D313                   MOV.L       L796+34,R3 ; __muls
    00000E8C 430B                   JSR         @R3
    00000E8E 0009                   NOP
    00000E90 6603                   MOV         R0,R6
         Dodge.c   908                    SpawnProjectile(xPos, yPos, 0, 0, directionX, directionY, 0);
    00000E92 E100                   MOV         #0,R1
    00000E94 2F16                   MOV.L       R1,@-R15
    00000E96 2F66                   MOV.L       R6,@-R15
    00000E98 2F76                   MOV.L       R7,@-R15
    00000E9A 6713                   MOV         R1,R7
    00000E9C BC10                   BSR         _SpawnProjectile
    00000E9E 6613                   MOV         R1,R6
         Dodge.c   909                }
         Dodge.c   910                
         Dodge.c   911                break;
    00000EA0 A082                   BRA         L714
    00000EA2 7F0C                   ADD         #12,R15
    00000EA4              L607:                            ; case label 
         Dodge.c   912            case 6: // continuously spawn projectiles with an initial direction towards the player
         Dodge.c   913                if(projectileIndex % 10 == 0) {
    00000EA4 D308                   MOV.L       L796+18,R3 ; __modls
    00000EA6 61D3                   MOV         R13,R1
    00000EA8 430B                   JSR         @R3
    00000EAA 6043                   MOV         R4,R0
    00000EAC 2008                   TST         R0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   56


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000EAE 8B7B                   BF          L714
         Dodge.c   914                    for (i = 0; i < 16; i++)
    00000EB0 6CB3                   MOV         R11,R12
    00000EB2 A047                   BRA         L738
    00000EB4 6DB3                   MOV         R11,R13
    00000EB6              L796:                             
    00000EB6 0000                   .DATA.W     0
    00000EB8 <00000000>             .DATA.L     __itos
    00000EBC 42000000               .DATA.L     H'42000000
    00000EC0 42800000               .DATA.L     H'42800000
    00000EC4 <00000000>             .DATA.L     __negs
    00000EC8 <00000000>             .DATA.L     __modls
    00000ECC 40000000               .DATA.L     H'40000000
    00000ED0 C0000000               .DATA.L     H'C0000000
    00000ED4 3DA3D70A               .DATA.L     H'3DA3D70A
    00000ED8 <00000000>             .DATA.L     __muls
    00000EDC 3E23D70A               .DATA.L     H'3E23D70A
    00000EE0 3D23D70A               .DATA.L     H'3D23D70A
    00000EE4 3E99999A               .DATA.L     H'3E99999A
    00000EE8 <00000000>             .DATA.L     __subs
    00000EEC 3C23D70A               .DATA.L     H'3C23D70A
    00000EF0 <00000000>             .DATA.L     _playerY
    00000EF4              L739:                             
         Dodge.c   915                    {
         Dodge.c   916                        xPos = i * 8;
         Dodge.c   917                        yPos = 1;
         Dodge.c   918                        directionX = ((float)playerX - xPos) * 0.005f;
    00000EF4 D23B                   MOV.L       L799,R2    ; __itos
    00000EF6 65D3                   MOV         R13,R5
    00000EF8 420B                   JSR         @R2
    00000EFA 6092                   MOV.L       @R9,R0
    00000EFC D339                   MOV.L       L799,R3    ; __itos
    00000EFE 6103                   MOV         R0,R1
    00000F00 430B                   JSR         @R3
    00000F02 6053                   MOV         R5,R0
    00000F04 D338                   MOV.L       L799+4,R3  ; __subs
    00000F06 430B                   JSR         @R3
    00000F08 6403                   MOV         R0,R4
    00000F0A D138                   MOV.L       L799+8,R1  ; H'3BA3D70A
    00000F0C D238                   MOV.L       L799+12,R2 ; __muls
    00000F0E 420B                   JSR         @R2
    00000F10 0009                   NOP
    00000F12 6603                   MOV         R0,R6
         Dodge.c   919                        directionY = ((float)playerY - yPos) * 0.005f;
    00000F14 D237                   MOV.L       L799+16,R2 ; _playerY
    00000F16 D333                   MOV.L       L799,R3    ; __itos
    00000F18 430B                   JSR         @R3
    00000F1A 6022                   MOV.L       @R2,R0
    00000F1C D136                   MOV.L       L799+20,R1 ; H'BF800000
    00000F1E D337                   MOV.L       L799+24,R3 ; __adds
    00000F20 430B                   JSR         @R3
    00000F22 0009                   NOP
    00000F24 D131                   MOV.L       L799+8,R1  ; H'3BA3D70A
    00000F26 D332                   MOV.L       L799+12,R3 ; __muls
    00000F28 430B                   JSR         @R3
    00000F2A 0009                   NOP
    00000F2C 6503                   MOV         R0,R5




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   57


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Dodge.c   920                        SpawnProjectile(xPos, yPos, 0, 0, directionX, directionY, 0);
    00000F2E E100                   MOV         #0,R1
    00000F30 2F16                   MOV.L       R1,@-R15
    00000F32 6713                   MOV         R1,R7
    00000F34 2F56                   MOV.L       R5,@-R15
    00000F36 2F66                   MOV.L       R6,@-R15
    00000F38 D531                   MOV.L       L799+28,R5 ; H'3F800000
    00000F3A BBC1                   BSR         _SpawnProjectile
    00000F3C 6613                   MOV         R1,R6
    00000F3E 7F0C                   ADD         #12,R15
    00000F40 7C01                   ADD         #1,R12
    00000F42 7D08                   ADD         #8,R13
    00000F44              L738:                             
    00000F44 3CE3                   CMP/GE      R14,R12
    00000F46 8BD5                   BF          L739
         Dodge.c   921                    }
         Dodge.c   922                    
         Dodge.c   923                }
         Dodge.c   924                
         Dodge.c   925                break;
    00000F48 A02E                   BRA         L714
    00000F4A 0009                   NOP
    00000F4C              L608:                            ; default label 
         Dodge.c   926            default:
         Dodge.c   927                mod2 = projectileIndex % 2;
    00000F4C 60D3                   MOV         R13,R0
    00000F4E 4011                   CMP/PZ      R0
    00000F50 8B01                   BF          L740
    00000F52 A005                   BRA         L741
    00000F54 C901                   AND         #1,R0
    00000F56              L740:                             
    00000F56 6007                   NOT         R0,R0
    00000F58 7001                   ADD         #1,R0
    00000F5A C901                   AND         #1,R0
    00000F5C 6007                   NOT         R0,R0
    00000F5E 7001                   ADD         #1,R0
    00000F60              L741:                             
    00000F60 6403                   MOV         R0,R4
         Dodge.c   928                xPos = mod2 == 0 ? 1 : 128 - 1;
    00000F62 2448                   TST         R4,R4
    00000F64 8B01                   BF          L742
    00000F66 A001                   BRA         L743
    00000F68 EC01                   MOV         #1,R12
    00000F6A              L742:                             
    00000F6A EC7F                   MOV         #127,R12
    00000F6C              L743:                             
         Dodge.c   929                direction = mod2 == 0 ? 1 : -1;
    00000F6C 2448                   TST         R4,R4
    00000F6E 8B01                   BF          L744
    00000F70              L772:                             
    00000F70 A001                   BRA         L597
    00000F72 EE01                   MOV         #1,R14
    00000F74              L744:                             
    00000F74 EEFF                   MOV         #-1,R14
    00000F76              L597:
         Dodge.c   930                SpawnProjectile(xPos, (projectileIndex + 1) * 4, 0, 0, (float)direction * 0.1f, 0, 0);
    00000F76 E300                   MOV         #0,R3




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   58


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000F78 D21A                   MOV.L       L799,R2    ; __itos
    00000F7A 2F36                   MOV.L       R3,@-R15
    00000F7C 2F36                   MOV.L       R3,@-R15
    00000F7E 420B                   JSR         @R2
    00000F80 60E3                   MOV         R14,R0
    00000F82 D120                   MOV.L       L799+32,R1 ; H'3DCCCCCD
    00000F84 D21A                   MOV.L       L799+12,R2 ; __muls
    00000F86 420B                   JSR         @R2
    00000F88 0009                   NOP
    00000F8A 6733                   MOV         R3,R7
    00000F8C D215                   MOV.L       L799,R2    ; __itos
    00000F8E 6633                   MOV         R3,R6
    00000F90 2F06                   MOV.L       R0,@-R15
    00000F92 60D3                   MOV         R13,R0
    00000F94 7001                   ADD         #1,R0
    00000F96 420B                   JSR         @R2
    00000F98 4008                   SHLL2       R0
    00000F9A 6503                   MOV         R0,R5
    00000F9C D111                   MOV.L       L799,R1    ; __itos
    00000F9E 410B                   JSR         @R1
    00000FA0 60C3                   MOV         R12,R0
    00000FA2 BB8D                   BSR         _SpawnProjectile
    00000FA4 6403                   MOV         R0,R4
    00000FA6 7F0C                   ADD         #12,R15
         Dodge.c   931                break;
    00000FA8              L714:                             
         Dodge.c   932        }
         Dodge.c   933    
         Dodge.c   934        projectileIndex++;
    00000FA8 6282                   MOV.L       @R8,R2
    00000FAA 7201                   ADD         #1,R2
    00000FAC 2822                   MOV.L       R2,@R8
         Dodge.c   935        if(projectileIndex > maxProjectiles) {
    00000FAE 6123                   MOV         R2,R1
    00000FB0 D015                   MOV.L       L799+36,R0 ; _maxProjectiles
    00000FB2 6302                   MOV.L       @R0,R3
    00000FB4 3137                   CMP/GT      R3,R1
    00000FB6 8B0B                   BF          L746
         Dodge.c   936            KillTimer(ID_USER_TIMER3); // stop this attack
    00000FB8 D114                   MOV.L       L799+40,R1 ; _KillTimer
    00000FBA 410B                   JSR         @R1
    00000FBC E403                   MOV         #3,R4
         Dodge.c   937            currentAttack++;
    00000FBE 63A2                   MOV.L       @R10,R3
         Dodge.c   938            if(currentAttack >= attacksTotal)
    00000FC0 D013                   MOV.L       L799+44,R0 ; _attacksTotal
    00000FC2 7301                   ADD         #1,R3
    00000FC4 2A32                   MOV.L       R3,@R10
    00000FC6 6133                   MOV         R3,R1
    00000FC8 6202                   MOV.L       @R0,R2
    00000FCA 3123                   CMP/GE      R2,R1
    00000FCC 8B00                   BF          L746
         Dodge.c   939                currentAttack = 0;
    00000FCE 2AB2                   MOV.L       R11,@R10
    00000FD0              L746:                             
         Dodge.c   940        }
         Dodge.c   941    }




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   59


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000FD0 7F04                   ADD         #4,R15
    00000FD2 4F26                   LDS.L       @R15+,PR
    00000FD4 68F6                   MOV.L       @R15+,R8
    00000FD6 69F6                   MOV.L       @R15+,R9
    00000FD8 6AF6                   MOV.L       @R15+,R10
    00000FDA 6BF6                   MOV.L       @R15+,R11
    00000FDC 6CF6                   MOV.L       @R15+,R12
    00000FDE 6DF6                   MOV.L       @R15+,R13
    00000FE0 000B                   RTS
    00000FE2 6EF6                   MOV.L       @R15+,R14
    00000FE4              L799:                             
    00000FE4 <00000000>             .DATA.L     __itos
    00000FE8 <00000000>             .DATA.L     __subs
    00000FEC 3BA3D70A               .DATA.L     H'3BA3D70A
    00000FF0 <00000000>             .DATA.L     __muls
    00000FF4 <00000000>             .DATA.L     _playerY
    00000FF8 BF800000               .DATA.L     H'BF800000
    00000FFC <00000000>             .DATA.L     __adds
    00001000 3F800000               .DATA.L     H'3F800000
    00001004 3DCCCCCD               .DATA.L     H'3DCCCCCD
    00001008 <00000000>             .DATA.L     _maxProjectiles
    0000100C <00000000>             .DATA.L     _KillTimer
    00001010 <00000000>             .DATA.L     _attacksTotal
         Dodge.c   942    // the next "attack"
         Dodge.c   943    void NextProjectiles() {
    00001014              _NextProjectiles:                ; function: NextProjectiles
                                                           ; frame size=0
         Dodge.c   944        size_t i;
         Dodge.c   945        projectileIndex = 0;
    00001014 D22B                   MOV.L       L800+4,R2  ; _projectileIndex
    00001016 E300                   MOV         #0,R3
    00001018 D72B                   MOV.L       L800+8,R7  ; _projectiles
    0000101A 2232                   MOV.L       R3,@R2
    0000101C D52B                   MOV.L       L800+12,R5 ; _false
    0000101E 6473                   MOV         R7,R4
    00001020 964E                   MOV.W       L800,R6    ; H'1000
    00001022 367C                   ADD         R7,R6
         Dodge.c   946    
         Dodge.c   947        for (i = 0; i < 128; i++)
    00001024              L748:                             
         Dodge.c   948        {
         Dodge.c   949            projectiles[i].enabled = false;
    00001024 6350                   MOV.B       @R5,R3
    00001026 2430                   MOV.B       R3,@R4
    00001028 7420                   ADD         #32,R4
    0000102A 3462                   CMP/HS      R6,R4
    0000102C 8BFA                   BF          L748
         Dodge.c   950        }
         Dodge.c   951        
         Dodge.c   952    
         Dodge.c   953        // note maxProjectiles can't be more than 50 or it'll run into the next attack and cause issues
         Dodge.c   954        switch (currentAttack)
    0000102E E610                   MOV         #16,R6
    00001030 D427                   MOV.L       L800+16,R4 ; _maxProjectiles
    00001032 D328                   MOV.L       L800+20,R3 ; _currentAttack
    00001034 6032                   MOV.L       @R3,R0
    00001036 8800                   CMP/EQ      #0,R0




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   60


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001038 8D1A                   BT/S        L776
    0000103A E501                   MOV         #1,R5
    0000103C 8801                   CMP/EQ      #1,R0
    0000103E 890B                   BT          L610
    00001040 8802                   CMP/EQ      #2,R0
    00001042 890B                   BT          L611
    00001044 8803                   CMP/EQ      #3,R0
    00001046 890B                   BT          L773
    00001048 8804                   CMP/EQ      #4,R0
    0000104A 8909                   BT          L613
    0000104C 8805                   CMP/EQ      #5,R0
    0000104E 8909                   BT          L614
    00001050 8806                   CMP/EQ      #6,R0
    00001052 890A                   BT          L615
    00001054 A00C                   BRA         L776
    00001056 0009                   NOP
    00001058              L610:                            ; case label 
         Dodge.c   955        {
         Dodge.c   956            case 0:
         Dodge.c   957                maxProjectiles = 16;
         Dodge.c   958                break;
         Dodge.c   959            case 1:
         Dodge.c   960                maxProjectiles = 32;
         Dodge.c   961                break;
    00001058 A005                   BRA         L774
    0000105A E120                   MOV         #32,R1
    0000105C              L611:                            ; case label 
         Dodge.c   962            case 2:
         Dodge.c   963                maxProjectiles = 15;
         Dodge.c   964                break;
    0000105C A006                   BRA         L775
    0000105E E00F                   MOV         #15,R0
    00001060              L613:                            ; case label 
         Dodge.c   965            case 3:
         Dodge.c   966                maxProjectiles = 1;
         Dodge.c   967                break;
         Dodge.c   968            case 4:
         Dodge.c   969                maxProjectiles = 1;
         Dodge.c   970                break;
    00001060              L773:                             
    00001060 A007                   BRA         L749
    00001062 2452                   MOV.L       R5,@R4
    00001064              L614:                            ; case label 
         Dodge.c   971            case 5:
         Dodge.c   972                maxProjectiles = 35;
    00001064 E123                   MOV         #35,R1
         Dodge.c   973                break;
    00001066              L774:                             
    00001066 A004                   BRA         L749
    00001068 2412                   MOV.L       R1,@R4
    0000106A              L615:                            ; case label 
         Dodge.c   974            case 6:
         Dodge.c   975                maxProjectiles = 30;
    0000106A E01E                   MOV         #30,R0
         Dodge.c   976                break;
    0000106C              L775:                             
    0000106C A001                   BRA         L749




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   61


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    0000106E 2402                   MOV.L       R0,@R4
    00001070              L776:                             
         Dodge.c   977            default:
         Dodge.c   978                maxProjectiles = 16;
    00001070 2462                   MOV.L       R6,@R4
    00001072              L749:                             
         Dodge.c   979                break;
         Dodge.c   980        }
         Dodge.c   981    
         Dodge.c   982        SetTimer(ID_USER_TIMER3, 100, SpawnNext);
    00001072 E564                   MOV         #100,R5
    00001074 D319                   MOV.L       L800+28,R3 ; _SetTimer
    00001076 D618                   MOV.L       L800+24,R6 ; _SpawnNext
    00001078 432B                   JMP         @R3
    0000107A E403                   MOV         #3,R4
         Dodge.c   983    }
         Dodge.c   984    
         Dodge.c   985    #pragma endregion
         Dodge.c   986    
         Dodge.c   987    #pragma endregion
         Dodge.c   988    
         Dodge.c   989    void GameFrame() {
    0000107C              _GameFrame:                      ; function: GameFrame
                                                           ; frame size=4
    0000107C 4F22                   STS.L       PR,@-R15
         Dodge.c   990        // increment frame count
         Dodge.c   991        timer++;
    0000107E D418                   MOV.L       L800+32,R4 ; _timer
    00001080 6342                   MOV.L       @R4,R3
    00001082 7301                   ADD         #1,R3
         Dodge.c   992        RenderScreen();
    00001084 BB62                   BSR         _RenderScreen
    00001086 2432                   MOV.L       R3,@R4
         Dodge.c   993        Controls();
    00001088 BD4F                   BSR         _Controls
    0000108A 0009                   NOP
         Dodge.c   994        Physics();
    0000108C BC90                   BSR         _Physics
    0000108E 0009                   NOP
         Dodge.c   995        if(playerHealth < 0) {
    00001090 D214                   MOV.L       L800+36,R2 ; _playerHealth
    00001092 6122                   MOV.L       @R2,R1
    00001094 4111                   CMP/PZ      R1
    00001096 8903                   BT          L750
         Dodge.c   996            AppQuit();
    00001098 B8E8                   BSR         _AppQuit
    0000109A 0009                   NOP
         Dodge.c   997            RenderGameOver();
    0000109C A95B                   BRA         _RenderGameOver
    0000109E 4F26                   LDS.L       @R15+,PR
    000010A0              L750:                             
         Dodge.c   998        }
         Dodge.c   999    }
    000010A0 4F26                   LDS.L       @R15+,PR
    000010A2 000B                   RTS
    000010A4 0009                   NOP
         Dodge.c  1000    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   62


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Dodge.c  1001    /** Add-in entry point
         Dodge.c  1002     * 
         Dodge.c  1003     * Parameters: app_mode - Is launched from the main menu
         Dodge.c  1004     *             strip_no - Strip number from eActivity
         Dodge.c  1005     * 
         Dodge.c  1006     * Returns:    NOT error
         Dodge.c  1007     */
         Dodge.c  1008    // Start function
         Dodge.c  1009    int AddIn_main(int app_mode, unsigned short strip_no)
    000010A6              _AddIn_main:                     ; function: AddIn_main
                                                           ; frame size=20
    000010A6 2FE6                   MOV.L       R14,@-R15
    000010A8 2FD6                   MOV.L       R13,@-R15
    000010AA 4F22                   STS.L       PR,@-R15
    000010AC DD0E                   MOV.L       L800+40,R13; _true
    000010AE 7FF8                   ADD         #-8,R15
         Dodge.c  1010    {
         Dodge.c  1011        unsigned int i, j; // Iteration variables
         Dodge.c  1012        unsigned char str[3];
         Dodge.c  1013        unsigned int key;  // Keyboard input
         Dodge.c  1014    
         Dodge.c  1015        // Clear out the display
         Dodge.c  1016        Bdisp_AllClr_DDVRAM();
    000010B0 D30E                   MOV.L       L800+44,R3 ; _Bdisp_AllClr_DDVRAM
    000010B2 430B                   JSR         @R3
    000010B4 0009                   NOP
         Dodge.c  1017        RenderMainMenu();
    000010B6 B93D                   BSR         _RenderMainMenu
    000010B8 0009                   NOP
    000010BA DE09                   MOV.L       L800+32,R14; _timer
         Dodge.c  1018        
         Dodge.c  1019        while(true) { // menu
    000010BC A02E                   BRA         L751
    000010BE 0009                   NOP
    000010C0              L800:                             
    000010C0 1000                   .DATA.W     H'1000
    000010C2 0000                   .DATA.W     0
    000010C4 <00000000>             .DATA.L     _projectileIndex
    000010C8 <00000000>             .DATA.L     _projectiles
    000010CC <00000000>             .DATA.L     _false
    000010D0 <00000000>             .DATA.L     _maxProjectiles
    000010D4 <00000000>             .DATA.L     _currentAttack
    000010D8 <00000000>             .DATA.L     _SpawnNext
    000010DC <00000000>             .DATA.L     _SetTimer
    000010E0 <00000000>             .DATA.L     _timer
    000010E4 <00000000>             .DATA.L     _playerHealth
    000010E8 <00000000>             .DATA.L     _true
    000010EC <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000010F0              L752:                             
         Dodge.c  1020            timer++; // we will use number of cycles until the player starts as our random seed, as it is high
                         +ly unlikely to be the same
    000010F0 62E2                   MOV.L       @R14,R2
    000010F2 7201                   ADD         #1,R2
    000010F4 2E22                   MOV.L       R2,@R14
         Dodge.c  1021            if(IsKeyDown(KEY_CTRL_EXE)) {
    000010F6 B821                   BSR         _KeyDown
    000010F8 E41F                   MOV         #31,R4




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   63


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000010FA 600C                   EXTU.B      R0,R0
    000010FC 2008                   TST         R0,R0
    000010FE 8B10                   BF          L754
         Dodge.c  1022                break;
         Dodge.c  1023            }
         Dodge.c  1024            if (IsKeyDown(KEY_CTRL_MENU) || IsKeyDown(KEY_CTRL_EXIT))
    00001100 B81C                   BSR         _KeyDown
    00001102 E430                   MOV         #48,R4
    00001104 600C                   EXTU.B      R0,R0
    00001106 2008                   TST         R0,R0
    00001108 8B04                   BF          L756
    0000110A B817                   BSR         _KeyDown
    0000110C E42F                   MOV         #47,R4
    0000110E 600C                   EXTU.B      R0,R0
    00001110 2008                   TST         R0,R0
    00001112 8903                   BT          L751
    00001114              L756:                             
         Dodge.c  1025            {
         Dodge.c  1026                AppQuit();
    00001114 B8AA                   BSR         _AppQuit
    00001116 0009                   NOP
         Dodge.c  1027                break;
    00001118 A003                   BRA         L754
    0000111A 0009                   NOP
    0000111C              L751:                             
    0000111C 62D0                   MOV.B       @R13,R2
    0000111E 2228                   TST         R2,R2
    00001120 8BE6                   BF          L752
    00001122              L754:                             
         Dodge.c  1028            }
         Dodge.c  1029        }
         Dodge.c  1030        srand(timer);
    00001122 D320                   MOV.L       L801+2,R3  ; _srand
    00001124 430B                   JSR         @R3
    00001126 64E2                   MOV.L       @R14,R4
         Dodge.c  1031        timer = 0;
         Dodge.c  1032    
         Dodge.c  1033        Bdisp_AllClr_DDVRAM();
    00001128 D31F                   MOV.L       L801+6,R3  ; _Bdisp_AllClr_DDVRAM
    0000112A E200                   MOV         #0,R2
    0000112C 430B                   JSR         @R3
    0000112E 2E22                   MOV.L       R2,@R14
         Dodge.c  1034    
         Dodge.c  1035        // Set up timers for game loop and attacks
         Dodge.c  1036        SetTimer(ID_USER_TIMER1, 50, GameFrame);
    00001130 D61E                   MOV.L       L801+10,R6 ; _GameFrame
    00001132 E532                   MOV         #50,R5
    00001134 D21E                   MOV.L       L801+14,R2 ; _SetTimer
    00001136 420B                   JSR         @R2
    00001138 E401                   MOV         #1,R4
         Dodge.c  1037        SetTimer(ID_USER_TIMER2, 5000, NextProjectiles); // should be 5000, shortened for testing
    0000113A D61E                   MOV.L       L801+18,R6 ; _NextProjectiles
    0000113C 9531                   MOV.W       L801,R5    ; H'1388
    0000113E D31C                   MOV.L       L801+14,R3 ; _SetTimer
    00001140 430B                   JSR         @R3
    00001142 E402                   MOV         #2,R4
         Dodge.c  1038    




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   64


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Dodge.c  1039        // Set quit handler
         Dodge.c  1040        SetQuitHandler(AppQuit);
    00001144 D41C                   MOV.L       L801+22,R4 ; _AppQuit
    00001146 D21D                   MOV.L       L801+26,R2 ; _SetQuitHandler
    00001148 420B                   JSR         @R2
    0000114A 0009                   NOP
         Dodge.c  1041    
         Dodge.c  1042        // The main thread manages the keys
         Dodge.c  1043        while (IsKeyUp(KEY_CTRL_MENU) && playerHealth > 0)
    0000114C A03E                   BRA         L757
    0000114E 0009                   NOP
    00001150              L758:                             
         Dodge.c  1044        {
         Dodge.c  1045            int keyResp = GetKeyWait(KEYWAIT_HALTON_TIMEROFF, 0, 0, &key);
    00001150 DE1B                   MOV.L       L801+30,R14; _GetKeyWait
    00001152 67F3                   MOV         R15,R7
    00001154 E600                   MOV         #0,R6
    00001156 6563                   MOV         R6,R5
    00001158 4E0B                   JSR         @R14
    0000115A 6463                   MOV         R6,R4
         Dodge.c  1046        
         Dodge.c  1047            if (keyResp == KEYREP_KEYEVENT)
    0000115C 8801                   CMP/EQ      #1,R0
    0000115E 8F06                   BF/S        L759
    00001160 6403                   MOV         R0,R4
         Dodge.c  1048            {
         Dodge.c  1049                if (key == KEY_CTRL_MENU || key == KEY_CTRL_EXIT)
    00001162 60F2                   MOV.L       @R15,R0
    00001164 8830                   CMP/EQ      #48,R0
    00001166 890E                   BT          L598
    00001168 60F2                   MOV.L       @R15,R0
    0000116A 882F                   CMP/EQ      #47,R0
    0000116C 890B                   BT          L598
    0000116E              L759:                             
         Dodge.c  1050                {
         Dodge.c  1051                    AppQuit();
         Dodge.c  1052                    break;
         Dodge.c  1053                }
         Dodge.c  1054            }
         Dodge.c  1055    
         Dodge.c  1056            if (IsKeyDown(KEY_CTRL_MENU) || IsKeyDown(KEY_CTRL_EXIT))
    0000116E D215                   MOV.L       L801+34,R2 ; _KeyDown
    00001170 420B                   JSR         @R2
    00001172 E430                   MOV         #48,R4
    00001174 600C                   EXTU.B      R0,R0
    00001176 2008                   TST         R0,R0
    00001178 8B05                   BF          L598
    0000117A D212                   MOV.L       L801+34,R2 ; _KeyDown
    0000117C 420B                   JSR         @R2
    0000117E E42F                   MOV         #47,R4
    00001180 600C                   EXTU.B      R0,R0
    00001182 2008                   TST         R0,R0
    00001184 8903                   BT          L763
    00001186              L598:
         Dodge.c  1057            {
         Dodge.c  1058                AppQuit();
    00001186 B871                   BSR         _AppQuit




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   65


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001188 0009                   NOP
         Dodge.c  1059                break;
    0000118A A029                   BRA         L762
    0000118C 0009                   NOP
    0000118E              L763:                             
         Dodge.c  1060            }
         Dodge.c  1061    
         Dodge.c  1062            if(playerHealth <= 0) {
    0000118E D40E                   MOV.L       L801+38,R4 ; _playerHealth
    00001190 6242                   MOV.L       @R4,R2
    00001192 4215                   CMP/PL      R2
    00001194 891A                   BT          L757
         Dodge.c  1063                AppQuit();
    00001196 B869                   BSR         _AppQuit
    00001198 0009                   NOP
         Dodge.c  1064                RenderGameOver();
    0000119A B8DC                   BSR         _RenderGameOver
    0000119C 0009                   NOP
         Dodge.c  1065                break;
    0000119E A01F                   BRA         L762
    000011A0 0009                   NOP
    000011A2              L801:                             
    000011A2 1388                   .DATA.W     H'1388
    000011A4 <00000000>             .DATA.L     _srand
    000011A8 <00000000>             .DATA.L     _Bdisp_AllClr_DDVRAM
    000011AC <00000000>             .DATA.L     _GameFrame
    000011B0 <00000000>             .DATA.L     _SetTimer
    000011B4 <00000000>             .DATA.L     _NextProjectiles
    000011B8 <00000000>             .DATA.L     _AppQuit
    000011BC <00000000>             .DATA.L     _SetQuitHandler
    000011C0 <00000000>             .DATA.L     _GetKeyWait
    000011C4 <00000000>             .DATA.L     _KeyDown
    000011C8 <00000000>             .DATA.L     _playerHealth
    000011CC              L757:                             
    000011CC D309                   MOV.L       L802,R3    ; _KeyDown
    000011CE 430B                   JSR         @R3
    000011D0 E430                   MOV         #48,R4
    000011D2 600C                   EXTU.B      R0,R0
    000011D4 2008                   TST         R0,R0
    000011D6 8B03                   BF          L762
    000011D8 D207                   MOV.L       L802+4,R2  ; _playerHealth
    000011DA 6322                   MOV.L       @R2,R3
    000011DC 4315                   CMP/PL      R3
    000011DE 89B7                   BT          L758
    000011E0              L762:                             
         Dodge.c  1066            }
         Dodge.c  1067        }
         Dodge.c  1068    
         Dodge.c  1069        // Good job on somehow breaking the loop. Cleanup time.
         Dodge.c  1070        AppQuit();
    000011E0 B844                   BSR         _AppQuit
    000011E2 0009                   NOP
         Dodge.c  1071        RenderGameOver();
    000011E4 B8B7                   BSR         _RenderGameOver
    000011E6 0009                   NOP
         Dodge.c  1072    
         Dodge.c  1073        // At the end, return application status




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   66


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

         Dodge.c  1074        return true;
    000011E8 60D0                   MOV.B       @R13,R0
         Dodge.c  1075    }
    000011EA 7F08                   ADD         #8,R15
    000011EC 4F26                   LDS.L       @R15+,PR
    000011EE 6DF6                   MOV.L       @R15+,R13
    000011F0 000B                   RTS
    000011F2 6EF6                   MOV.L       @R15+,R14
    000011F4              L802:                             
    000011F4 <00000000>             .DATA.L     _KeyDown
    000011F8 <00000000>             .DATA.L     _playerHealth
         Dodge.c  1076    
         Dodge.c  1077    #pragma region Do not touch
         Dodge.c  1078    
         Dodge.c  1079    // Source code from here down should not be changed according to the
         Dodge.c  1080    // CASIO SDK sample project.
         Dodge.c  1081    
         Dodge.c  1082    #pragma section _BR_Size
         Dodge.c  1083    unsigned long BR_Size;
         Dodge.c  1084    #pragma section
         Dodge.c  1085    
         Dodge.c  1086    #pragma section _TOP
         Dodge.c  1087    
         Dodge.c  1088    //****************************************************************************
         Dodge.c  1089    //  InitializeSystem
         Dodge.c  1090    //
         Dodge.c  1091    //  param   :   isAppli   : 1 = Application / 0 = eActivity
         Dodge.c  1092    //              OptionNum : Option Number (only eActivity)
         Dodge.c  1093    //
         Dodge.c  1094    //  retval  :   1 = No error / 0 = Error
         Dodge.c  1095    //
         Dodge.c  1096    //****************************************************************************
         Dodge.c  1097    int InitializeSystem(int isAppli, unsigned short OptionNum)
P_T 00000000              _InitializeSystem:               ; function: InitializeSystem
                                                           ; frame size=0
         Dodge.c  1098    {
         Dodge.c  1099        return INIT_ADDIN_APPLICATION(isAppli, OptionNum);
    00000000 D301                   MOV.L       L803+2,R3  ; _INIT_ADDIN_APPLICATION
    00000002 432B                   JMP         @R3
    00000004 0009                   NOP
    00000006              L803:                             
    00000006 0000                   .DATA.W     0
    00000008 <00000000>             .DATA.L     _INIT_ADDIN_APPLICATION
         Dodge.c  1100    }
         Dodge.c  1101    
         Dodge.c  1102    #pragma section
         Dodge.c  1103    
         Dodge.c  1104    #pragma endregion
C   00000000              _sc0015:                         ; static: sc0015
    00000000 D201D00242             .DATA.L     H'D201D002,H'422B0009,H'80010070,H'00000015
             2B00098001   
             0070000000   
             15           
    00000010              _true:                           ; static: true
    00000010 01                     .DATA.B     H'01
    00000011              _false:                          ; static: false
    00000011 00                     .DATA.B     H'00




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   67


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000012              _DISPLAY_WIDTH:                  ; static: DISPLAY_WIDTH
    00000012 80                     .DATA.B     H'80
    00000013              _DISPLAY_HEIGHT:                 ; static: DISPLAY_HEIGHT
    00000013 40                     .DATA.B     H'40
    00000014              _DISPLAY_CENTER_X:               ; static: DISPLAY_CENTER_X
    00000014 40                     .DATA.B     H'40
    00000015              _DISPLAY_CENTER_Y:               ; static: DISPLAY_CENTER_Y
    00000015 20                     .DATA.B     H'20
    00000016 00000002               .RES.W      1
    00000018              _attacksTotal:                   ; static: attacksTotal
    00000018 00000007               .DATA.L     H'00000007
    0000001C              L445:
    0000001C 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    000000F0 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   68


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    000001C4 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   69


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00000298 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   70


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    0000036C 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00000440 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   71


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0101010101   
             0101010101   
             0101         
    00000514 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'01,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000010000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'01,H'00,H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'01,
             0000000100 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   72


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0001000101   
             0101010101   
             0100010000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0100010000   
             0001000001   
             0001000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    000005E8 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'01,H'00,H'01,H'00,H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'01,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000010001 +                       H'01,H'00,H'01,H'00,H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'01,H'00,H'00,H'00,H'00,
             0000000100 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0001000100 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0001000100   
             0000010000   
             0100010000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   73


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0100000000   
             0000000000   
             0001000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    000006BC 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000010000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0001000100 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'01,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'01,
             0000000000 +                       H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,
             0000000000 +                       H'01,H'00,H'01,H'00
             0000000000   
             0001000100   
             0000000001   
             0000010000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0100000100   
             0000010000   
             0001000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000010000   
             0000000000   
             0000000001   
             0000000100   
             0100         




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   74


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00000790 0000000100             .DATA.B     H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'01,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'01,H'00,H'01,H'00,
             0000000101 +                       H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0100000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0001000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'00,H'00,H'01,
             0001000000 +                       H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000010000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0100000001   
             0001000000   
             0001000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000001   
             0000010000   
             0001000000   
             0100000000   
             0000000000   
             0000000000   
             0000         
    00000864 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'01,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0100000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000100 +                       H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'01,
             0001000100 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000001 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000010000 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   75


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000101   
             0000000000   
             0000010100   
             0000000000   
             0100000000   
             0000000001   
             0001000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000100   
             0000000000   
             0001000000   
             0000000001   
             0000000000   
             0000000000   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00000938 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0001000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000010000 +                       H'01,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'01,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'01,H'00,H'01,H'00,H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'01,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'01,H'00,H'01,H'00
             0000000000   
             0000000000   
             0100010101   
             0101010101   
             0001000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0001010100   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   76


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000001   
             0001000000   
             0100000100   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0001000000   
             0000000000   
             0000000100   
             0100         
    00000A0C 0000010000             .DATA.B     H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0100010000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'01,H'00,
             0000000000 +                       H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0001010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'01,
             0100000000 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'01,H'00,
             0000000000 +                       H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,
             0100010000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0001000001 +                       H'00,H'00,H'00,H'00
             0001000000   
             0000000000   
             0000000000   
             0000000101   
             0000000000   
             0101000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000001   
             0001000000   
             0100000100   
             0100000000   
             0000000000   
             0000000000   
             0001000000   
             0000000000   
             0001000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000100   
             0000000000   
             0000000001   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   77


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000         
    00000AE0 0000010000             .DATA.B     H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000001 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0101000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0100000000 +                       H'01,H'00,H'00,H'00
             0000000000   
             0000000001   
             0000000000   
             0000000001   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000100   
             0000000000   
             0000000000   
             0000000001   
             0000000000   
             0000000100   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000010000   
             0000000000   
             0000000000   
             0000000100   
             0000         
    00000BB4 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0100000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,
             0000000100 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,
             0001000000 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   78


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000001 +                       H'00,H'00,H'00,H'00
             0101010101   
             0101000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000010000   
             0000000000   
             0000000000   
             0000000000   
             0100000000   
             0000000100   
             0000000000   
             0000000000   
             0000000000   
             0000010000   
             0000000000   
             0000000000   
             0000000000   
             0100000001   
             0101010100   
             0000000000   
             0000000000   
             0100000000   
             0000010000   
             0000000000   
             0000000000   
             0000         
    00000C88 0000000001             .DATA.B     H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'01,H'00,
             0000000000 +                       H'00,H'00,H'01,H'00,H'01,H'00,H'01,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000010000 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0001000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,
             0100000001 +                       H'00,H'00,H'01,H'00,H'01,H'00,H'01,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,
             0001000100 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000010000 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,
             0000000001 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000100 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0001000000   
             0001010100   
             0000000100   
             0100010000   
             0001000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000010101   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   79


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0101010101   
             0000000000   
             0000000000   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0001000000   
             0000000000   
             0000000000   
             0000         
    00000D5C 0001000000             .DATA.B     H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'01,H'01,H'01,
             0000010101 +                       H'01,H'01,H'01,H'01,H'01,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,
             0000000101 +                       H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0100010000 +                       H'00,H'01,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'01,H'00,
             0000000000 +                       H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0100000000 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'01,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'01,H'00,
             0000000100 +                       H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'01,H'00,
             0100000000 +                       H'00,H'00,H'00,H'01
             0100000001   
             0000000100   
             0000000100   
             0000010000   
             0000000100   
             0000000000   
             0100000000   
             0000000000   
             0000010000   
             0000000000   
             0000000000   
             0000000001   
             0000000001   
             0000000100   
             0000010000   
             0000010000   
             0001000000   
             0000010000   
             0000000001   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000100   
             0000000001   
             0101000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   80


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0001000000   
             0001         
    00000E30 0000000100             .DATA.B     H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000001 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,
             0001000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'01,H'01,
             0000000000 +                       H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,
             0000000000 +                       H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'00,
             0000000000 +                       H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0100000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,
             0000000001 +                       H'00,H'00,H'01,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000010100 +                       H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000010000 +                       H'00,H'00,H'00,H'00
             0000000001   
             0101010101   
             0000000000   
             0000000000   
             0000000101   
             0101010100   
             0000000000   
             0000000001   
             0000000001   
             0101010100   
             0000000001   
             0101000000   
             0001000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0001000000   
             0000000100   
             0000000000   
             0000000100   
             0000000100   
             0000010000   
             0000000000   
             0000000000   
             0100000000   
             0000000000   
             0000000000   
             0000         
    00000F04 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000100 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0100000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0100000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0001010100 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'00,
             0000010000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   81


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000010000   
             0000000001   
             0000000000   
             0000000001   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0001000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000010101   
             0101010000   
             0000000000   
             0000000100   
             0000000001   
             0101000000   
             0000000000   
             0000000000   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00000FD8 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'01,H'00,
             0001000000 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,
             0100000001 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'01,H'00,H'01,H'00,H'01,H'00,
             0001000000 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0100000001   
             0001000100   
             0000000001   
             0100000000   
             0100000000   
             0000010101   
             0101010101   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   82


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000001   
             0000000000   
             0101010000   
             0000000000   
             0000000001   
             0000000000   
             0001000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000100   
             0000000000   
             0000000000   
             0000         
    000010AC 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,
             0001000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000001 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'01,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'01,H'00,H'01,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0001000001 +                       H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010100 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'01,H'00,H'01,H'00,H'01,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,
             0000000001 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000001   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0100000100   
             0100010000   
             0000000000   
             0000000100   
             0000000000   
             0000010000   
             0000000000   
             0000000000   
             0000000000   
             0001010100   
             0000010000   
             0000000000   
             0000000000   
             0100010001   
             0001000000   
             0000000000   
             0001000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   83


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0100000000   
             0000         
    00001180 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,
             0000000000 +                       H'01,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000010000 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0001000001 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000000000 +                       H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,
             0000000000 +                       H'01,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000010000 +                       H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,
             0000000100 +                       H'01,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,
             0000010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,
             0101010101 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0100000000 +                       H'00,H'01,H'01,H'00
             0000000000   
             0001000000   
             0100000100   
             0000000000   
             0000000000   
             0000010000   
             0000000000   
             0000000000   
             0001000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0100000001   
             0000010000   
             0000000000   
             0000000000   
             0000010000   
             0000000000   
             0000000001   
             0000000000   
             0000000000   
             0001010101   
             0101010000   
             0000000000   
             0000000000   
             0000000001   
             0100         
    00001254 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,
             0100000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0100000000 +                       H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,
             0000010000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0100000000 +                       H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   84


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0101000000   
             0000010100   
             0000000000   
             0000000000   
             0001000000   
             0000000001   
             0000000000   
             0000000000   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0001010101   
             0100000000   
             0000000000   
             0000000000   
             0100000000   
             0000000100   
             0000000000   
             0000000001   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00001328 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,
             0000010000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0100000000 +                       H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0001010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010100 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'01,H'01,H'00
             0000000000   
             0000000000   
             0000010101   
             0101010100   
             0000000000   
             0000000000   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   85


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000001   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000001   
             0100         
    000013FC 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000101 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0100000000 +                       H'00,H'01,H'01,H'00
             0000000000   
             0000000000   
             0000000000   
             0101010000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0101000000   
             0000000000   
             0000000000   
             0000010100   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   86


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0001010100   
             0000000000   
             0000000001   
             0100         
    000014D0 0100000000             .DATA.B     H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,
             0000000000 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,
             0000000000 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0001010000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0100000001 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000010101   
             0000000000   
             0000000000   
             0000000000   
             0101000100   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000001   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0001010000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    000015A4 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010000 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   87


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000001   
             0101010101   
             0101010100   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00001678 0001000000             .DATA.B     H'00,H'01,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,
             0100000000 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,
             0100000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'01,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,
             0101010000 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'01,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'01,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,
             0100000001 +                       H'00,H'00,H'00,H'00
             0000000001   
             0000000000   
             0000000001   
             0000010000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   88


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000001   
             0000000100   
             0000000100   
             0000000000   
             0000000100   
             0001010000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000100   
             0000010000   
             0000010000   
             0000000000   
             0000         
    0000174C 0100000100             .DATA.B     H'01,H'00,H'00,H'01,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0100000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'01,H'01,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101000000 +                       H'00,H'00,H'00,H'00
             0101000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   89


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000010000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00001820 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000001 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000101   
             0101010101   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000010000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    000018F4 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000001 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   90


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    000019C8 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   91


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00001A9C 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   92


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00001B70 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00001C44 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   93


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00001D18 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   94


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00001DEC 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   95


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00001EC0 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00001F94 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   96


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             00           
    0000201C              L449:
    0000201C 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   97


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    000020F0 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    000021C4 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   98


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00002298 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE   99


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    0000236C 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0001010000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'01,H'00
             0000000000   
             0001010101   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000001   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  100


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0100         
    00002440 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000101 +                       H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0001010101   
             0101000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000001   
             0101010101   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000010101   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00002514 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  101


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000010100 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000001   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000010000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    000025E8 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0001010101 +                       H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'01,
             0100000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0001000000   
             0000000101   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  102


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0001010000   
             0000000001   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    000026BC 0000000100             .DATA.B     H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000010000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,
             0000010000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0001000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0001000000   
             0000000000   
             0101000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  103


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0100000000   
             0000000000   
             0100000000   
             0000         
    00002790 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000010000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0000010000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0001000000   
             0000000000   
             0001000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0100000000   
             0000000001   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00002864 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  104


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000010100 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0001000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000101   
             0101010101   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0001010000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00002938 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  105


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0101010101   
             0101010000   
             0000         
    00002A0C 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,
             0100000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  106


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000101   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00002AE0 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000001 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0100000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000010100   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000001   
             0101010101   
             0101000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00002BB4 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,
             0000000000 +                       H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  107


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0101010000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000010101   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000101   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00002C88 0001000000             .DATA.B     H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  108


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00002D5C 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  109


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00002E30 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'01,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010100 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,
             0000000000 +                       H'00,H'00,H'01,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0001010000   
             0000010100   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000001   
             0100000100   
             0000010101   
             0101010100   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00002F04 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  110


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0001000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'01,H'01,H'01,H'01,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0100000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'01,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0100000000   
             0000000001   
             0101010101   
             0001010101   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000100   
             0000000000   
             0000000000   
             0000000100   
             0000000100   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00002FD8 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101000000 +                       H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0001010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0100000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0100000000 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'00,H'00,H'00,H'00
             0100000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  111


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000001   
             0000000001   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000001   
             0000000000   
             0000000101   
             0101010100   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000101   
             0000010000   
             0000010000   
             0000         
    000030AC 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0001000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0001010101   
             0101010000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  112


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00003180 0000000101             .DATA.B     H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'00,
             0000000000 +                       H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'01,
             0000000000 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'01,H'01,H'01,H'00,
             0101010001 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,
             0101000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0101010101   
             0000010100   
             0000000000   
             0000000001   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000010101   
             0000000101   
             0100000000   
             0000000000   
             0000000100   
             0000000000   
             0000         
    00003254 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  113


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000001 +                       H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000001 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0100000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000001 +                       H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000010100   
             0000000000   
             0000000000   
             0000000000   
             0000000100   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0001000000   
             0000000000   
             0000000000   
             0000000000   
             0001000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00003328 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000101 +                       H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000100 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  114


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000100   
             0000000000   
             0000000000   
             0000000000   
             0001000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000010000   
             0000000000   
             0000000000   
             0000000001   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000010000   
             0000         
    000033FC 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0001000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000001 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,
             0100000000 +                       H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000001   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000001   
             0100000000   
             0000000000   
             0000010100   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  115


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0101010100   
             0000000000   
             0101000000   
             0000000000   
             0000         
    000034D0 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0001010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  116


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    000035A4 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0001010000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000010101   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000010101   
             0101000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00003678 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000001 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'01,H'01




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  117


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000100   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0101         
    0000374C 0101010000             .DATA.B     H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,
             0000000000 +                       H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'01,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'01,
             0000010100 +                       H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0001010000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0100010000   
             0000010000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  118


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000001   
             0001000000   
             0001000000   
             0000000000   
             0000000000   
             0000         
    00003820 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,
             0000000000 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'01,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010100 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000100 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'01,H'00,H'00,H'00,H'00,H'01,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000001   
             0001000000   
             0001010000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000100   
             0100000000   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  119


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000         
    000038F4 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    000039C8 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0100000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  120


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0001010100 +                       H'00,H'00,H'00,H'00
             0000000001   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000001   
             0000000000   
             0000010000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000100   
             0000000001   
             0101000000   
             0000000000   
             0000         
    00003A9C 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0000000000 +                       H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,
             0001010101 +                       H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0101010101 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0100000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0101010000   
             0000000000   
             0001010101   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  121


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000101   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00003B70 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000100 +                       H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000100   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000010100   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  122


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000         
    00003C44 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00003D18 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000101 +                       H'00,H'00,H'00,H'00,H'00,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,H'01,
             0101000000 +                       H'01,H'01,H'01,H'01,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  123


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0001010101   
             0101010101   
             0101010101   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00003DEC 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'01,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0100000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  124


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000         
    00003EC0 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  125


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

             0000000000   
             0000000000   
             0000         
    00003F94 0000000000             .DATA.B     H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00,
             0000000000 +                       H'00,H'00,H'00,H'00,H'00,H'00,H'00,H'00
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             0000000000   
             00           
D   00000000              _playerHealth:                   ; static: playerHealth
    00000000 00000040               .DATA.L     H'00000040
    00000004              _playerX:                        ; static: playerX
    00000004 00000040               .DATA.L     H'00000040
    00000008              _playerY:                        ; static: playerY
    00000008 00000020               .DATA.L     H'00000020
    0000000C              _currentAttack:                  ; static: currentAttack
    0000000C 00000000               .DATA.L     H'00000000
    00000010              _paused:                         ; static: paused
    00000010 01                     .DATA.B     H'01
    00000011              _quit:                           ; static: quit
    00000011 00                     .DATA.B     H'00
    00000012 00000002               .RES.W      1
    00000014              _timer:                          ; static: timer
    00000014 00000000               .DATA.L     H'00000000
    00000018              _flicker:                        ; static: flicker
    00000018 01                     .DATA.B     H'01
    00000019              _damaged:                        ; static: damaged
    00000019 00                     .DATA.B     H'00
    0000001A 00000002               .RES.W      1
    0000001C              _flickerOffset:                  ; static: flickerOffset
    0000001C 00000000               .DATA.L     H'00000000
B   00000000              _projectiles:                    ; static: projectiles
    00000000 00001000               .RES.L      1024
    00001000              _projectileIndex:                ; static: projectileIndex
    00001000 00000004               .RES.L      1




SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE  126


SCT OFFSET   CODE       C LABEL     INSTRUCTION OPERAND    COMMENT

    00001004              _maxProjectiles:                 ; static: maxProjectiles
    00001004 00000004               .RES.L      1
B_B 00000000              _BR_Size:                        ; static: BR_Size
    00000000 00000004               .RES.L      1

























































SH SERIES C/C++ Compiler (Ver. 6.0C)                                                                 18-Mar-2023 15:57:11  PAGE    1


******** STATISTICS INFORMATION ********


********** ERROR INFORMATION ***********

NUMBER OF ERRORS:           0
NUMBER OF WARNINGS:        58




******* SOURCE LINE INFORMATION ********

COMPILED SOURCE LINE:     1104



******* SECTION SIZE INFORMATION *******

PROGRAM  SECTION (P):                               000011FC Byte(s)
PROGRAM  SECTION (P_BR_Size):                       00000000 Byte(s)
PROGRAM  SECTION (P_TOP):                           0000000C Byte(s)
CONSTANT SECTION (C):                               0000401C Byte(s)
CONSTANT SECTION (C_BR_Size):                       00000000 Byte(s)
CONSTANT SECTION (C_TOP):                           00000000 Byte(s)
DATA     SECTION (D):                               00000020 Byte(s)
DATA     SECTION (D_BR_Size):                       00000000 Byte(s)
DATA     SECTION (D_TOP):                           00000000 Byte(s)
BSS      SECTION (B):                               00001008 Byte(s)
BSS      SECTION (B_BR_Size):                       00000004 Byte(s)
BSS      SECTION (B_TOP):                           00000000 Byte(s)

 TOTAL PROGRAM SIZE: 00006250 Byte(s)



********** LABEL INFORMATION ***********

NUMBER OF EXTERNAL REFERENCE SYMBOLS:           31
NUMBER OF EXTERNAL DEFINITION SYMBOLS:          51
NUMBER OF INTERNAL/EXTERNAL SYMBOLS:           243






















*** COMMAND PARAMETER ***


  -subcommand=C:\Users\Amir\AppData\Local\Temp\hmk3F15.tmp 

